{"version":3,"sources":["assets/Payroll-Pal-Logo Large.svg","assets/Payroll-Pal-Logo Small.svg","AuthContext.js","payroll-pal-client.js","LoginComponents/LoginForm.js","LoginComponents/Login.js","CoreComponents/Header.js","CoreComponents/Greeting.js","CoreComponents/EditEntry.js","CoreComponents/Entry.js","CoreComponents/TimeCard.js","CoreComponents/EntryHeading.js","CoreComponents/EntriesList.js","CoreComponents/Core.js","CoreComponents/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthContext","React","createContext","isAuthenticated","authToken","logout","apiUrl","PayrollPalClient","path","method","body","fetch","headers","Headers","JSON","stringify","then","res","json","result","error","getAuthToken","args","username","password","demo","sendRequest","token","setAuthToken","start","end","d","Date","getMonth","getDate","getFullYear","sendAuthedRequest","entry","deleteAuthToken","Cookies","remove","get","set","Heartbeat","Error","LoginForm","login","e","a","preventDefault","document","getElementById","value","props","context","authenticate","history","push","className","id","onSubmit","this","type","placeholder","Component","withRouter","Consumer","LogoLarge","require","Login","demoLogin","state","to","alt","src","width","height","location","onClick","LogoSmall","Header","coreContext","useContext","CoreContext","authContext","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","approveAll","setMessage","onChange","event","setPayRate","target","defaultValue","payRate","Greeting","firstName","totalHours","EditEntry","useState","setEntry","punches","length","punchCounter","setPunchCounter","colorMap","Punch","name","updatePunch","punchIndex","deletePunch","useEffect","tmp","Object","assign","approved","splice","approve","allApproved","setApproved","entryIndex","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","day","date","map","punch","i","key","updateEntry","Entry","index","hours","updatedEntry","setEntries","TimeCard","payPeriodStart","payPeriodEnd","setPayPeriodStart","setPayPeriodEnd","EntryHeading","monthMap","EntriesList","loading","setLoading","hb","setInterval","catch","clearInterval","getEntries","status_code","setError","setState","entries","setFirstName","setTotalHours","Core","message","values","self","setTimeout","error401","pathname","Provider","ProtectedRoute","App","getIsAuthenticated","component","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c1bfb31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Payroll-Pal-Logo Large.bdaaacca.svg\";","module.exports = __webpack_public_path__ + \"static/media/Payroll-Pal-Logo Small.245426ad.svg\";","import React from 'react';\n\nconst AuthContext = React.createContext({\n    isAuthenticated: () => {},\n    authToken: () => {},\n    logout: () => {},\n})\nexport default AuthContext;","import Cookies from 'js-cookie'\n\nconst apiUrl = 'http://localhost:5000'\n// const apiUrl = 'payrollpal.thefoundationworks.com/api\n\nclass PayrollPalClient  {\n\n    static async sendRequest(path, method, body){\n        return await fetch(`${apiUrl}${path}`, {\n\n            headers: new Headers({\n                \"Content-Type\": 'application/json',\n            }),\n            method: method ? method : 'POST',\n            body: JSON.stringify(body),\n\n        })\n        .then(res => res.json())\n        .then(\n            (result) => {\n                return result\n            },\n            (error) => {\n                return error\n            }\n        )\n    }\n\n    static async sendAuthedRequest(path, method, body){\n        return await fetch(`${apiUrl}${path}`, {\n\n            headers: new Headers({\n                \"Content-Type\": 'application/json',\n                \"Authorization\": 'JWT ' + PayrollPalClient.getAuthToken()\n            }),\n            method: method ? method : 'POST',\n            body: JSON.stringify(body),\n\n        })\n        .then( res => res.json() )\n        .then(\n            (result) => {\n                return result\n            },\n            (error) => {\n                return error\n            }\n        )\n    }\n    \n    static login(...args) { \n        let username = args[0].username\n        let password = args[0].password\n        let body = {'username': username, 'password': password}\n        let demo = args[0].demo\n\n        return PayrollPalClient.sendRequest('/auth', 'POST', body).then(\n            (result) => {\n                let token = result['access_token']\n                PayrollPalClient.setAuthToken(token)\n                return result\n            },\n            (error) => {\n                return error\n            }\n        )\n    }\n\n    static getEntries(start, end){\n        if(!start) {\n            let d = new Date('October 21, 2019')\n            start = [d.getMonth()+1, d.getDate(), d.getFullYear()]\n        }\n\n        if(!end) {\n            let d = new Date('October 27, 2019')\n            end = [d.getMonth()+1, d.getDate(), d.getFullYear()]\n        }\n        \n        let body = {'start': start, 'end': end}\n\n        return PayrollPalClient.sendAuthedRequest('/get-entries', 'POST', body)\n    }\n\n    static updateEntry(entry) {\n        let body = {'entry': entry}\n        return PayrollPalClient.sendAuthedRequest('/update-entry', 'POST', body)\n    }\n\n    static approveAll(start, end){\n        let body = {'start': start, 'end': end}\n        return PayrollPalClient.sendAuthedRequest('/approve-all', 'POST', body)\n    }\n\n    static logout(){\n        PayrollPalClient.deleteAuthToken();\n        Cookies.remove('demo')\n    }\n\n    static getAuthToken(){\n        return Cookies.get('authToken')\n    }\n\n    static async getIsAuthenticated(){\n        return await PayrollPalClient.sendAuthedRequest('/verify', 'GET').then(\n            (result) => {\n                return result.error ? false : true\n            }\n        )\n    }\n\n    static setAuthToken(token){\n        Cookies.set('authToken', token)\n    }\n\n    static deleteAuthToken(){\n        Cookies.remove('authToken')\n    }\n\n}\n\nconst Heartbeat = () => {\n    return PayrollPalClient.sendAuthedRequest('/hearbeat', 'GET').then(\n        (result) => {\n            if(result.error){\n                throw Error(\"Whoops! Something went wrong. Your token most likely expired or was invalid.\")\n            }\n        }\n    )\n}\n\nexport default PayrollPalClient;\nexport { Heartbeat }","import React from 'react';\nimport \"../css/Login.css\"\nimport '../css/App.css';\nimport { withRouter } from 'react-router-dom'\nimport PayrollPalClient from '../payroll-pal-client'\nimport AuthContext from '../AuthContext';\n\nclass LoginForm extends React.Component {\n    \n    login = async (e) => {\n        e.preventDefault();\n\n        let username = document.getElementById(\"username\").value;\n        let password = document.getElementById(\"password\").value;\n        let loggedIn = await PayrollPalClient.login({username: username, password: password})       \n\n        if(loggedIn) {\n            this.props.context.authenticate()\n            this.props.history.push(\"/core\")     \n        }\n\n    }\n    render(){\n        return(\n            <div className=\"pt-4 login-form\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                    </div>\n                    <div className=\"p-4 login-form-container\">\n                    <h1 className=\"\">Login</h1>\n                        <form id=\"form\" onSubmit={this.login}>    \n                            <div className=\"row\">\n                                <div className=\"pt-3 col-12\">\n                                    <input className=\"mb-4 pt-mono\" id=\"username\" type=\"text\" placeholder=\"Username\" />\n                                </div>\n                                <div className=\"col-12\">\n                                    <input className=\"pt-mono\" id=\"password\" type=\"password\" placeholder=\"Password\" />\n                                </div>\n                            </div>\n                            <button type=\"submit\" className=\"btn px-3 mt-4 pt-mono pill btn-orange\">Login</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default withRouter((props) => (\n    <AuthContext.Consumer>\n        {\n            (context) => <LoginForm context={context} {...props} />\n        }\n    </AuthContext.Consumer>\n))","import React from \"react\";\nimport { Redirect, withRouter } from 'react-router-dom';\nimport AuthContext from \"../AuthContext\";\nimport LoginForm from './LoginForm'\nimport '../css/Login.css';\nimport '../css/App.css';\nimport PayrollPalClient from \"../payroll-pal-client\";\n\nlet LogoLarge = require('../assets/Payroll-Pal-Logo Large.svg');\n\nclass Login extends React.Component {\n   demoLogin = () => {\n       if(PayrollPalClient.login({demo: true})){\n         this.props.context.authenticate()\n         this.props.history.push(\"/core\") \n       }\n   }\n   state = {\n       error: false\n   }\n    render(){\n        if(this.props.context.isAuthenticated){\n            return (\n                <Redirect to=\"/core\" />\n            )\n        }\n        else {\n            return(\n                <div className=\"container login-container\">\n                    <div className=\"row\">\n                        <div className=\"login-logo-container pt-4 col-12\">\n                            <img alt=\"Payroll Pal\" src={LogoLarge} width={300} height={300} />\n                        </div>\n                    </div>\n                    { this.props.location.state && this.props.location.state.error ? <div className=\"alert mx-5 alert-danger\">{this.props.location.state.error}</div> : <div></div> }\n                    <LoginForm />\n                    <div onClick={this.demoLogin} className=\"btn pill mt-4 btn-warning\">View Demo</div>\n                    <br></br>\n                </div>\n            )\n        }\n    }\n}\n\nexport default (props) => (\n    <AuthContext.Consumer>\n        {\n            (context) => <Login {...props} context={context} />\n        }\n    </AuthContext.Consumer>\n);","import React, { useContext } from \"react\";\nimport {Link} from 'react-router-dom'\nimport AuthContext from '../AuthContext'\nimport { CoreContext } from './Core'\nlet LogoSmall = require('../assets/Payroll-Pal-Logo Small.svg');\n\n\nfunction Header() {\n    const coreContext = useContext(CoreContext);\n    const authContext = useContext(AuthContext)\n\n    const logout = () => {\n        authContext.logout()\n    }\n    const updatePay = (event) => {\n        coreContext.setPayRate(event.target.value)\n    }\n    const approveAll = () => {\n        coreContext.approveAll()\n        coreContext.setMessage(\"All hours have been approved!\")\n    }\n\n    return (\n        <div>\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\">\n                <a className=\"ml-3 navbar-brand\" href=\"/core\"><img alt=\"Payroll Pal\" src={LogoSmall}/></a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse justify-content-end navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav\">\n                    <li className=\"px-2 nav-item\">\n                        <div onClick={approveAll} className=\"pt-mono nav-link\">Approve All</div>\n                    </li>\n                    <li className=\"px-2 nav-item\">\n                        <div className=\"pt-mono pay-rate-container nav-link\" >Pay Rate: $<input className=\"pay-rate-input\"onChange={updatePay} defaultValue={coreContext.payRate} type=\"number\"></input></div>\n                    </li>\n                    <li className=\"px-2 nav-item\">\n                        <Link to=\"/login\" className=\"pt-mono nav-link\" onClick={logout}>Logout</Link>\n                    </li>\n                    </ul>\n                </div>\n            </nav>\n        </div> \n    )\n    \n}\n\nexport default Header;","import React, { useContext } from \"react\";\nimport { CoreContext } from \"./Core\"\n\nfunction Greeting() {\n   const coreContext = useContext(CoreContext)\n   return(\n        <div className=\"greeting-container\">\n            <h1 className=\"greeting\">Hi { coreContext.firstName }!</h1>\n            <div className=\"greeting-content pt-mono\">\n                You've worked {coreContext.totalHours} hours.<br></br>That equals <span className=\"orange-text\">$</span>{ coreContext.totalHours * coreContext.payRate}!\n            </div>\n        </div>\n    )\n}\n\nexport default Greeting;","import React, { useState, useContext, useEffect } from \"react\";\nimport { CoreContext } from './Core'\n\nfunction EditEntry(props) {\n    const [entry, setEntry] = useState(props.entry)\n    const [punchCounter, setPunchCounter] = useState(entry.punches ? entry.punches.length : 0);\n    const coreContext = useContext(CoreContext)\n    const colorMap = {\n        'Monday': 'monday',\n        'Tuesday': 'tuesday',\n        'Wednesday': 'wednesday',\n        'Thursday': 'thursday',\n        'Friday': 'friday',\n        'Saturday': 'saturday',\n        'Sunday': 'sunday',\n    }\n    const monthMap = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const Punch = (props) => {\n        return (\n            <div className=\"punch container-fluid my-4\">\n                <div className=\"row text-center px-2\">\n                    <div className=\"col-4 px-1\">\n                        <select name=\"punch-type\" className=\"pt-mono punchType\" onChange={updatePunch} defaultValue={props.type} id={props.punchIndex}>\n                            <option value=\"work\" >Work</option>\n                            <option value=\"meal\" >Meal</option>\n                            <option value=\"bereavment\" >Bereavement</option>\n                            <option value=\"holiday\" >Holiday</option>\n                            <option value=\"jury_duty\" >Jury Duty</option>\n                            <option value=\"personal_time_off\" >Personal Time Off</option>\n                            <option value=\"sick\" >Sick</option>\n                            <option value=\"unpaid_time\" >Unpaid Time</option>\n                            <option value=\"vacation\" >Vacation</option>\n                        </select>\n                    </div>\n                    <div className=\"col-4 px-1\"><input defaultValue={props.start} onChange={updatePunch} id={props.punchIndex} className=\"pt-mono start\" type=\"text\" placeholder=\"Start\"name=\"start\" /></div>\n                    <div className=\"col-4 px-1 d-inline\">\n                        <input defaultValue={props.end} onChange={updatePunch} id={props.punchIndex} className=\"pt-mono end\" type=\"text\" placeholder=\"End\"name=\"end\" />\n                        <div id={props.punchIndex} onClick={deletePunch} className=\"delete d-inline text-center\"> X </div>\n                    </div>\n                </div>   \n            </div>\n            \n        )\n    }\n\n    useEffect(() => {\n        let tmp = Object.assign({}, entry)\n        tmp.approved=props.entry.approved;\n        setEntry(tmp)\n    }, [props.entry])\n\n    const appendPunch = () => {\n        entry.punches.push(['work', null, null])\n        setPunchCounter(punchCounter + 1) // to trigger rerender\n    }\n\n    const updatePunch = (e) => {\n        let punchIndex = e.target.id\n        switch(e.target.name) {\n            case 'punch-type':\n                entry.punches[punchIndex][0] = e.target.value\n                break;\n            case 'start':\n                entry.punches[punchIndex][1] = e.target.value\n                break;\n            case 'end':\n                entry.punches[punchIndex][2] = e.target.value\n                break;\n        }\n    }\n\n    const deletePunch = (e) => {\n        let punchIndex = e.target.id\n        entry.punches.splice(punchIndex, 1)\n        setPunchCounter(punchCounter - 1) // to trigger rerender\n    }\n\n    const updateEntry = (e) => {\n        props.updateEntry(entry)\n    }\n\n    const approve = (e) => {\n        let tmp = Object.assign({}, entry)\n        if(tmp.approved){\n            tmp.approved=false;\n            coreContext.allApproved=false;\n        }\n        else {\n            tmp.approved=true;\n            props.setApproved(true)\n        }\n        setEntry(tmp)\n        props.setEntry(tmp)\n    }\n\n    return(\n        <div className=\"modal fade\" id={`edit-entry-${props.entryIndex}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content border-radius-15 p-2\">\n                    <div className=\"modal-header d-block edit-entry-header\">\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                        <h5 className={`display-4 modal-title ${ colorMap[props.entry.day]}`} id=\"exampleModalLabel\">{ props.entry.day }</h5>\n                        <h5 className={`${ colorMap[props.entry.day]} pt-mono d-inline`} id=\"exampleModalLabel\">{monthMap[ props.entry.date[0]-1 ]} {props.entry.date[1]} {props.entry.date[2]}</h5>\n                        { entry.approved ? <div className=\"badge ml-2 d-inline badge-success\">Approved</div> :  <div className=\"badge ml-2 d-inline badge-warning\">Not Approved</div>}\n                    </div>\n                    <div id={`edit-entry-body-${props.entryIndex}`}className=\"pt-4 modal-body\">\n                        <div className=\"px-3 container-fluid\">\n                            <div className=\"row px-3\">\n                                <div className=\"punch-title col-4 w-85 px-1 text-center pt-mono black\">\n                                    Punch Type\n                                </div>\n                                <div className=\"punch-title col-4 w-85 px-1 text-center pt-mono black\">\n                                    Start\n                                </div>\n                                <div className=\"punch-title col-4 w-85 text-center pt-mono black\">\n                                    End\n                                </div>\n                            </div>\n                        </div>\n\n                        { entry.punches ? entry.punches.map((punch, i) => { return <Punch entryIndex={props.entryIndex} type={punch[0]} start={punch[1]} end={punch[2]} punchIndex={i} key={i} /> }) : null }\n\n                        <div onClick={appendPunch} className=\"btn pill btn-dark mt-2 add-punch\">Add punch</div>\n                    </div>\n                    <div className=\"modal-footer pt-4 edit-entry-footer\">\n                        { entry.approved ? <button onClick={approve} type=\"button\" name=\"approve\" className=\"btn pill px-3 btn-warning\">Unapprove</button> :  <button onClick={approve} type=\"button\" name=\"approve\" className=\"btn pill px-3 approve-button\">Approve</button>}\n                        \n                        <button onClick={updateEntry} type=\"button\" data-dismiss=\"modal\" name=\"save\" className=\"btn pill px-3 save\">Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditEntry;","import React, { useState, useEffect, useContext } from \"react\";\nimport EditEntry from './EditEntry'\nimport PayrollPalClient from \"../payroll-pal-client\";\nimport {CoreContext} from './Core'\n\nfunction Entry(props) {\n    const monthMap = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const colorMap = {\n        'Monday': ['monday-left', 'monday-right'],\n        'Tuesday': ['tuesday-left', 'tuesday-right'],\n        'Wednesday': ['wednesday-left', 'wednesday-right'],\n        'Thursday': ['thursday-left', 'thursday-right'],\n        'Friday': ['friday-left', 'friday-right'],\n        'Saturday': ['saturday-left', 'saturday-right'],\n        'Sunday': ['sunday-left', 'sunday-right'],\n    }\n    const [entry, setEntry] = useState(props)\n    const [approved, setApproved] = useState(false)\n    const coreContext = useContext(CoreContext)\n\n    useEffect(() => {\n        if(coreContext.allApproved){\n            let tmp = Object.assign({}, entry)\n            tmp.approved=true\n            setEntry(tmp)\n        }\n    }, [coreContext.allApproved])\n\n    const updateEntry = (updatedEntry) => {\n        PayrollPalClient.updateEntry(updatedEntry).then( result => {\n            if(result['error']){\n                coreContext.error = result['error']\n            }\n            else {\n                coreContext.setEntries(result['entries'])\n            }\n        })\n    }\n\n    return(\n        <div>\n            <div data-toggle=\"modal\" data-target={`#edit-entry-${props.index}`} className=\"row entry\">\n                <div className={`col-8 p-4 entry-left ${ colorMap[props.day][0] } `}>\n                    <div className=\"day\">{props.day}</div>{ entry.approved ? <div className=\"ml-2 badge badge-success approval\">&#10003;</div> : <div className=\"ml-2 badge badge-warning approval\">&#10007;</div> }<br/>\n                    <div className=\"date pt-mono\">{monthMap[ props.date[0]-1 ]} {props.date[1]} {props.date[2]}</div>\n                </div>\n                <div className={`col-4 p-4 entry-right text-center ${ colorMap[props.day][1] }`}>\n                    <div className=\"hours\">{props.hours}</div>\n                    hours\n                </div>\n            </div>\n            <EditEntry \n                entry={entry}\n                approved={approved}\n                setApproved={setApproved}\n                setEntry={setEntry}\n                updateEntry={updateEntry}\n                entryIndex={props.index}\n            />\n        </div>\n    )\n}\n\nexport default Entry;","import React, { useContext } from \"react\";\nimport { CoreContext } from \"./Core\";\n\nfunction TimeCard(props) {\n    const coreContext = useContext(CoreContext)\n\n    const updateFields = () => {\n        let start = [document.getElementById(\"start-month\").value, document.getElementById(\"start-day\").value, document.getElementById(\"start-year\").value] \n        let end = [document.getElementById(\"end-month\").value, document.getElementById(\"end-day\").value, document.getElementById(\"end-year\").value] \n        coreContext.setPayPeriodStart(start)\n        coreContext.setPayPeriodEnd(end)\n    }\n\n    return(\n        <div className=\"modal fade\" id=\"time-card\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content p-3 border-radius-15\">\n                    <div className=\"modal-header border-0\">\n                    <h1 className=\"pt-mono modal-title\" id=\"exampleModalLabel\">Time Card</h1>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                    </div>\n                    <div className=\"modal-body container-fluid\" id=\"new\">\n                        <div className=\"pt-mono orange-text\">Start:</div>\n                        <div className=\"row\">\n                            <div className=\"col-4 px-1\">\n                                <select defaultValue={coreContext.payPeriodStart[0]} id=\"start-month\">\n                                    <option value=\"1\">January</option>\n                                    <option value=\"2\">February</option>\n                                    <option value=\"3\">March</option>\n                                    <option value=\"4\">April</option>\n                                    <option value=\"5\">May</option>\n                                    <option value=\"6\">June</option>\n                                    <option value=\"7\">July</option>\n                                    <option value=\"8\">August</option>\n                                    <option value=\"9\">September</option>\n                                    <option value=\"10\">October</option>\n                                    <option value=\"11\">November</option>\n                                    <option value=\"12\">December</option>\n                                </select>\n                            </div>\n                            <div className=\"col-4 px-1\">\n                                <input defaultValue={coreContext.payPeriodStart[1]} id=\"start-day\" type=\"number\" placeholder=\"Day\"/>\n                            </div>\n                            <div className=\"col-4 px-1\">\n                                <input defaultValue={coreContext.payPeriodStart[2]} id=\"start-year\" type=\"number\" placeholder=\"Year\"/>\n                            </div>\n                        </div>\n                        <div className=\"mt-3 pt-mono orange-text\">End:</div>\n\n                        <div className=\"row\">\n                            <div className=\"col-4 px-1\">\n                                <select defaultValue={coreContext.payPeriodEnd[0]} id=\"end-month\">\n                                    <option value=\"1\">January</option>\n                                    <option value=\"2\">February</option>\n                                    <option value=\"3\">March</option>\n                                    <option value=\"4\">April</option>\n                                    <option value=\"5\">May</option>\n                                    <option value=\"6\">June</option>\n                                    <option value=\"7\">July</option>\n                                    <option value=\"8\">August</option>\n                                    <option value=\"9\">September</option>\n                                    <option value=\"10\">October</option>\n                                    <option value=\"11\">November</option>\n                                    <option value=\"12\">December</option>\n                                </select>\n                            </div>\n                            <div className=\"col-4 px-1\">\n                                <input defaultValue={coreContext.payPeriodEnd[1]} id=\"end-day\" type=\"number\" placeholder=\"Day\"/>\n                            </div>\n                            <div className=\"col-4 px-1\">\n                                <input defaultValue={coreContext.payPeriodEnd[2]} id=\"end-year\" type=\"number\" placeholder=\"Year\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer border-0 d-block text-center\">\n                        <button type=\"button\" data-dismiss=\"modal\" name=\"save\" className=\"btn pill px-3 btn-secondary\">Cancel</button>\n                        <button onClick={updateFields} type=\"button\" data-dismiss=\"modal\" name=\"save\" className=\"btn pill px-3 time-card-save\">Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TimeCard;","import React, { useContext } from \"react\";\nimport TimeCard from \"./TimeCard\";\nimport { CoreContext } from './Core'\n\nfunction EntryHeading(props) {\n    let coreContext = useContext(CoreContext)\n    let monthMap = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    return(\n        <div className=\"entries-heading-container container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h1 className=\"entries-heading inline \">Time Card</h1>\n                    <button data-toggle=\"modal\" data-target=\"#time-card\" className=\"btn pt-mono inline btn-primary pill pay-period-btn\">\n                        <div id=\"pay-period-start\"className=\"inline\">{monthMap[ coreContext.payPeriodStart[0]-1 ]} {coreContext.payPeriodStart[1]}</div>\n                        <span className=\"inline yellow-text\">  -  </span>\n                        <div id=\"pay-period-end\"className=\"inline\">{monthMap[ coreContext.payPeriodEnd[0]-1 ]} {coreContext.payPeriodEnd[1]}</div>\n                    </button>\n                </div>\n            </div>\n\n            <TimeCard />\n        </div>\n    )\n    \n    \n}\n\nexport default EntryHeading;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient, { Heartbeat } from '../payroll-pal-client'\nimport { CoreContext } from './Core'\nimport AuthContext from '../AuthContext'\n\nfunction EntriesList() {\n    const coreContext = useContext(CoreContext)\n    const authContext = useContext(AuthContext)\n    const payPeriodStart = coreContext.payPeriodStart\n    const payPeriodEnd = coreContext.payPeriodEnd\n    const [loading, setLoading] = useState(true)\n\n    useEffect( () => {\n        let hb = setInterval(function () {\n        Heartbeat().catch(\n            (error) => {\n                clearInterval(hb)\n                authContext.logout()\n            }\n        )\n        }, 30000)\n\n    PayrollPalClient.getEntries()\n    .then((result) => {\n        if(result.error){\n          if(result.status_code === 401){\n            coreContext.setError(\"Whoops! You are not logged in!\")\n            authContext.logout()\n          }\n          else {\n            coreContext.setError({error: result.error})\n            authContext.logout()\n          }\n        }\n        else {\n          coreContext.setState({\n            loading: false,\n            entries: result['entries'],\n            firstName: result['firstName'],\n            payPeriodStart: result['payPeriodStart'],\n            payPeriodEnd: result['payPeriodEnd'],\n            payRate: result['payRate'],\n            totalHours: result['totalHours'],\n            allApproved: false,\n          })\n        }\n      })\n    }, [])\n\n    useEffect( () => {\n        setLoading(true)\n        PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd).then(\n            (result) => {\n                coreContext.setEntries(result['entries'])\n                coreContext.setFirstName(result['firstName'])\n                coreContext.setPayRate(result['payRate'])\n                coreContext.setTotalHours(result['totalHours'])\n                setLoading(false)\n            },\n        )\n    }, [payPeriodStart, payPeriodEnd]);\n\n    return(\n\n        <div>\n            {\n                coreContext.payPeriodStart ? <EntryHeading /> : <div></div>\n            }\n            <div className={ loading ? \"container-fluid px-4\" : \"d-none\"}> \n                <h5 className=\"display-4\">Loading...</h5>\n            </div>\n            <div className={ loading ? \"d-none\" : \"\"}>\n                { coreContext['entries'] ? coreContext['entries'].map((entry, index) => {\n                    return <Entry {...entry} index={index} key={index} /> \n                }) : null}\n            </div>\n\n        </div>\n    )\n}\n\nexport default EntriesList;","import React from 'react';\nimport Header from './Header';\nimport Greeting from './Greeting';\nimport EntriesList from './EntriesList'\nimport PayrollPalClient from '../payroll-pal-client';\nimport { Redirect } from 'react-router-dom'\nimport AuthContext from '../AuthContext';\n\nconst CoreContext = React.createContext({})\n\nclass Core extends React.Component {\n  \n  state = {\n    loading: true,\n    error: null,\n    message: null,\n    setMessage: (value) => {\n      this.setState({ message: value })\n    },\n    setError: (value) => {\n      this.setState({ error: value })\n    },\n    setEntries: (value) => {\n      this.setState({ entries: value })\n    },\n    setPayRate: (value) => {\n        this.setState({ payRate: value })\n    },\n\n    setPayPeriodStart: (value) => {\n      this.setState({ payPeriodStart: value })\n    },\n\n    setPayPeriodEnd: (value) => {\n      this.setState({ payPeriodEnd: value })\n    },\n\n    setTotalHours: (value) => {\n      this.setState({ totalHours: value })\n    },\n\n    setLoading: (value) => {\n      this.setState({loading: value })\n    },\n\n    approveAll: () => {\n      PayrollPalClient.approveAll(this.state.payPeriodStart, this.state.payPeriodEnd).then( \n        (result) => {\n          this.setState(result)\n          this.setState({ allApproved: true })\n        }\n      )\n    },\n    setFirstName: (value) => {\n      this.setState({ firstName: value })\n    },\n    setState: (values) => {\n      this.setState({ ...values })\n    }\n  }\n  \n  componentDidUpdate(){\n    if(this.state.message || this.state.error) {\n      let self = this\n      setTimeout(\n        function(){ \n          self.setState({\n            error: null,\n            message: null\n          }); \n      }, 3000);\n    }\n  }\n\n  render(){\n    if(this.state.error401){\n      return <Redirect to={{\n        pathname: '/login',\n        state: { error: \"Whoops! You'll need to login again!\" }\n    }} />\n    }\n    else {\n      return (\n        <CoreContext.Provider value={this.state}>\n          <div className=\"App\">\n            <Header />\n            <div className=\"App-body\">  \n\n            { this.state.message ?  \n              <div className=\"alert mx-4 alert-success\" role=\"alert\">\n                { this.state.message }\n              </div> : <div></div> } \n              \n              { this.state.error ?  \n              <div className=\"alert mx-4 alert-danger\" role=\"alert\">\n                { this.state.error }\n              </div> : <div></div> } \n\n              <div>\n               <div className={ this.state.loading ? '': \"d-none\" }> <h5 className=\"display-4\">Loading...</h5></div>\n              <div className={ this.state.loading ? 'd-none': \"\" }>\n                <Greeting />\n                <EntriesList />\n              </div>\n              </div>\n              \n            </div> \n          </div>\n        </CoreContext.Provider>\n      );\n    }\n  }\n}\n\nexport default (props) => (\n  <AuthContext.Consumer>\n   { (context) => { return <Core context={context} {...props } /> } }\n  </AuthContext.Consumer>\n);\nexport { CoreContext };","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport AuthContext from '../AuthContext'\n\nclass ProtectedRoute extends React.Component {\n\n    render(){\n        if(this.props.context.isAuthenticated){\n            return (\n                <Route {...this.props} />\n            )\n        }\n        else {\n            return(\n                <Redirect to={{\n                    pathname: '/login',\n                    state: { error: \"Whoops! You need to be logged in!\" }\n                }} />\n            )\n        }\n    }\n    \n}\n\nexport default (props) => (\n    <AuthContext.Consumer>\n        {\n            (context) => <ProtectedRoute {...props} context={context} />\n        }\n    </AuthContext.Consumer>\n);","import React from 'react';\nimport './css/App.css';\nimport Login from './LoginComponents/Login'\nimport Core from './CoreComponents/Core';\nimport AuthContext from './AuthContext'\nimport ProtectedRoute from './CoreComponents/ProtectedRoute'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PayrollPalClient from './payroll-pal-client';\n\nclass App extends React.Component {\n  state = {\n    isAuthenticated: false,\n\n    authenticate: () => {\n      return PayrollPalClient.getIsAuthenticated().then( \n        (result) => {\n          this.setState({\n            isAuthenticated: result\n          })\n          return result\n      })\n    },\n\n    authToken: () => {\n      return PayrollPalClient.getAuthToken()\n    },\n\n    logout: () => {\n      PayrollPalClient.logout();\n      this.setState({\n        isAuthenticated: false\n      })\n    },\n\n  }\n\n  componentDidMount(){\n    if(PayrollPalClient.getAuthToken()){\n      this.state.authenticate()\n    }\n  }\n\n  render(){\n    return(\n      <AuthContext.Provider value={this.state}>\n        <Router>\n          <Switch>\n            <ProtectedRoute path=\"/core\" component={Core} />\n            <Route path={[\"/login\", \"/\"]} component={Login} />\n          </Switch>\n        </Router> \n      </AuthContext.Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
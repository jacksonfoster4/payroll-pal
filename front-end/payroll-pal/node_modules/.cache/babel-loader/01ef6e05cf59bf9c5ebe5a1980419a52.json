{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/ProtectedRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport AuthContext from '../AuthContext';\n\nclass ProtectedRoute extends React.Component {\n  render() {\n    return this.props.context.authenticate().then(result => {\n      if (result) {\n        return React.createElement(Route, Object.assign({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              error: \"Whoops! You need to be logged in!\"\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      }\n    });\n  }\n\n}\n\nexport default (props => React.createElement(AuthContext.Consumer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, context => React.createElement(ProtectedRoute, Object.assign({}, props, {\n  context: context,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}))));","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/ProtectedRoute.js"],"names":["React","Redirect","Route","AuthContext","ProtectedRoute","Component","render","props","context","authenticate","then","result","pathname","state","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAEzCC,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,YAAnB,GAAkCC,IAAlC,CACFC,MAAD,IAAY;AACR,UAAGA,MAAH,EAAU;AACN,eACI,oBAAC,KAAD,oBAAW,KAAKJ,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,OAJD,MAKK;AACD,eACI,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AACVK,YAAAA,QAAQ,EAAE,QADA;AAEVC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT;AAFG,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;AACJ,KAfE,CAAP;AAiBH;;AApBwC;;AAwB7C,gBAAgBP,KAAD,IACX,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAESC,OAAD,IAAa,oBAAC,cAAD,oBAAoBD,KAApB;AAA2B,EAAA,OAAO,EAAEC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFrB,CADJ","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport AuthContext from '../AuthContext'\n\nclass ProtectedRoute extends React.Component {\n\n    render(){\n        return this.props.context.authenticate().then(\n            (result) => {\n                if(result){\n                    return (\n                        <Route {...this.props} />\n                    )\n                }\n                else {\n                    return(\n                        <Redirect to={{\n                            pathname: '/login',\n                            state: { error: \"Whoops! You need to be logged in!\" }\n                        }} />\n                    )\n                }\n            }\n        )\n    }\n    \n}\n\nexport default (props) => (\n    <AuthContext.Consumer>\n        {\n            (context) => <ProtectedRoute {...props} context={context} />\n        }\n    </AuthContext.Consumer>\n);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/App.js\";\nimport React, { useContext } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Login from './Login';\nimport Core from './Core';\nimport AuthContext from './AuthContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport PayrollPalClient from './payroll-pal-client';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isAuthenticated: () => {\n        PayrollPalClient.getCookie('isAuthenticated');\n      },\n      authToken: () => {\n        PayrollPalClient.getCookie('authToken');\n      },\n      login: (username, password) => {\n        console.log('test');\n        PayrollPalClient.login(username, password);\n      },\n      updateIsAuthenticated: val => {\n        this.setState({\n          isAuthenticated: val\n        });\n      },\n      updateAuthToken: token => {\n        this.setState({\n          authToken: token\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(AuthContext.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(ProtectedRoute, {\n      path: \"/core\",\n      component: Core,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/App.js"],"names":["React","useContext","Login","Core","AuthContext","ProtectedRoute","BrowserRouter","Router","Route","PayrollPalClient","App","Component","state","isAuthenticated","getCookie","authToken","login","username","password","console","log","updateIsAuthenticated","val","setState","updateAuthToken","token","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,eAAe,EAAE,MAAM;AACrBJ,QAAAA,gBAAgB,CAACK,SAAjB,CAA2B,iBAA3B;AACD,OAHK;AAINC,MAAAA,SAAS,EAAE,MAAM;AACfN,QAAAA,gBAAgB,CAACK,SAAjB,CAA2B,WAA3B;AACD,OANK;AAONE,MAAAA,KAAK,EAAE,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAX,QAAAA,gBAAgB,CAACO,KAAjB,CAAuBC,QAAvB,EAAiCC,QAAjC;AACD,OAVK;AAWNG,MAAAA,qBAAqB,EAAGC,GAAD,IAAS;AAC9B,aAAKC,QAAL,CAAc;AACZV,UAAAA,eAAe,EAAES;AADL,SAAd;AAGD,OAfK;AAgBNE,MAAAA,eAAe,EAAGC,KAAD,IAAW;AAC1B,aAAKF,QAAL,CAAc;AACZR,UAAAA,SAAS,EAAEU;AADC,SAAd;AAGD;AApBK,KADwB;AAAA;;AAwBhCC,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,KAAKd,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEV,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,OAArB;AAA6B,MAAA,SAAS,EAAEC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AAjC+B;;AAoClC,eAAeO,GAAf","sourcesContent":["import React, { useContext } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Login'\nimport Core from './Core';\nimport AuthContext from './AuthContext'\nimport ProtectedRoute from './ProtectedRoute'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport PayrollPalClient from './payroll-pal-client';\n\nclass App extends React.Component {\n  state = {\n    isAuthenticated: () => {\n      PayrollPalClient.getCookie('isAuthenticated')\n    },\n    authToken: () => {\n      PayrollPalClient.getCookie('authToken')\n    },\n    login: (username, password) => {\n      console.log('test')\n      PayrollPalClient.login(username, password);\n    },\n    updateIsAuthenticated: (val) => {\n      this.setState({\n        isAuthenticated: val\n      })\n    },\n    updateAuthToken: (token) => {\n      this.setState({\n        authToken: token\n      })\n    },\n  }\n\n  render(){\n    return(\n      <AuthContext.Provider value={this.state}>\n        <Router>\n          <Route path=\"/login\" component={Login} />\n          <ProtectedRoute path=\"/core\" component={Core} />\n        </Router> \n      </AuthContext.Provider>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}
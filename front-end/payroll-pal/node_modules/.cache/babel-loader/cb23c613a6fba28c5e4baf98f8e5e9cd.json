{"ast":null,"code":"import _slicedToArray from \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient from '../payroll-pal-client';\nimport { CoreContext } from './Core';\n\nfunction EntriesList() {\n  const coreContext = useContext(CoreContext);\n  const payPeriodStart = coreContext.payPeriodStart;\n  const payPeriodEnd = coreContext.payPeriodEnd;\n  let entries;\n  PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd).then(result => entries = result);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  useEffect(() => {\n    setLoading(true);\n    console.log(entries);\n    coreContext.setTotalHours(entries['totalHours']);\n    setLoading(false);\n  }, [payPeriodStart, payPeriodEnd]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(EntryHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), loading ? React.createElement(\"div\", {\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Loading...\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), entries ? entries['entries'].map((entry, index) => {\n    return React.createElement(Entry, Object.assign({}, entry, {\n      index: index,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }) : null);\n}\n\nexport default EntriesList;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js"],"names":["React","useContext","useEffect","useState","Entry","EntryHeading","PayrollPalClient","CoreContext","EntriesList","coreContext","payPeriodStart","payPeriodEnd","entries","getEntries","then","result","loading","setLoading","console","log","setTotalHours","map","entry","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,SAASC,WAAT,GAAuB;AACnB,QAAMC,WAAW,GAAGR,UAAU,CAACM,WAAD,CAA9B;AAEA,QAAMG,cAAc,GAAGD,WAAW,CAACC,cAAnC;AACA,QAAMC,YAAY,GAAGF,WAAW,CAACE,YAAjC;AACA,MAAIC,OAAJ;AACAN,EAAAA,gBAAgB,CAACO,UAAjB,CAA4BH,cAA5B,EAA4CC,YAA5C,EAA0DG,IAA1D,CAA+DC,MAAM,IAAIH,OAAO,GAACG,MAAjF;;AANmB,oBAQWZ,QAAQ,CAAC,IAAD,CARnB;AAAA;AAAA,QAQZa,OARY;AAAA,QAQHC,UARG;;AAUnBf,EAAAA,SAAS,CAAE,MAAM;AACbe,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACAH,IAAAA,WAAW,CAACW,aAAZ,CAA0BR,OAAO,CAAC,YAAD,CAAjC;AACAK,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GALQ,EAKN,CAACP,cAAD,EAAiBC,YAAjB,CALM,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEMK,OAAO,GAAG;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF5D,EAIMJ,OAAO,GAAGA,OAAO,CAAC,SAAD,CAAP,CAAmBS,GAAnB,CAAuB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACjD,WAAO,oBAAC,KAAD,oBAAWD,KAAX;AAAkB,MAAA,KAAK,EAAEC,KAAzB;AAAgC,MAAA,GAAG,EAAEA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAFW,CAAH,GAEJ,IANT,CADJ;AAWH;;AAED,eAAef,WAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient from '../payroll-pal-client'\nimport { CoreContext } from './Core'\n\nfunction EntriesList() {\n    const coreContext = useContext(CoreContext)\n\n    const payPeriodStart = coreContext.payPeriodStart\n    const payPeriodEnd = coreContext.payPeriodEnd\n    let entries;\n    PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd).then(result => entries=result);\n    \n    const [loading, setLoading] = useState(true)\n\n    useEffect( () => {\n        setLoading(true)\n        console.log(entries)\n        coreContext.setTotalHours(entries['totalHours'])\n        setLoading(false)\n    }, [payPeriodStart, payPeriodEnd]);\n    return(\n        <div>\n            <EntryHeading />\n            { loading ? <div className=\"loading\">Loading...</div> : <div></div>}\n            \n            { entries ? entries['entries'].map((entry, index) => {\n                return <Entry {...entry} index={index} key={index} /> \n            }) : null}\n\n        </div>\n    )\n}\n\nexport default EntriesList;"]},"metadata":{},"sourceType":"module"}
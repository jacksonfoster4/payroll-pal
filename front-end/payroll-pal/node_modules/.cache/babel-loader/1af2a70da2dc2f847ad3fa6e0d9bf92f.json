{"ast":null,"code":"import _slicedToArray from \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient, { Heartbeat } from '../payroll-pal-client';\nimport { CoreContext } from './Core';\nimport AuthContext from '../AuthContext';\n\nfunction EntriesList() {\n  const coreContext = useContext(CoreContext);\n  const authContext = useContext(AuthContext);\n  const payPeriodStart = coreContext.payPeriodStart;\n  const payPeriodEnd = coreContext.payPeriodEnd;\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  useEffect(() => {\n    console.log('test');\n    let hb = setInterval(function () {\n      Heartbeat().catch(error => {\n        clearInterval(hb);\n        authContext.logout();\n      });\n    }, 30000);\n    PayrollPalClient.getEntries().then(result => {\n      if (result.error) {\n        if (result.status_code === 401) {\n          coreContext.setError({\n            error: \"Whoops! You are not logged in!\"\n          });\n          authContext.logout();\n        } else {\n          coreContext.setError({\n            error: result.error\n          });\n          authContext.logout();\n        }\n      } else {\n        coreContext.setState({\n          loading: false,\n          entries: result['entries'],\n          firstName: result['firstName'],\n          payPeriodStart: result['payPeriodStart'],\n          payPeriodEnd: result['payPeriodEnd'],\n          payRate: result['payRate'],\n          totalHours: result['totalHours'],\n          allApproved: false\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd).then(result => {\n      coreContext.setEntries(result['entries']);\n      coreContext.setFirstName(result['firstName']);\n      coreContext.setPayRate(result['payRate']);\n      coreContext.setTotalHours(result['totalHours']);\n      setLoading(false);\n    });\n  }, [payPeriodStart, payPeriodEnd]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, coreContext.payPeriodStart ? React.createElement(EntryHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: loading ? \"container-fluid px-4\" : \"d-none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"display-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(\"div\", {\n    className: loading ? \"d-none\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, coreContext['entries'] ? coreContext['entries'].map((entry, index) => {\n    return React.createElement(Entry, Object.assign({}, entry, {\n      index: index,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }) : null));\n}\n\nexport default EntriesList;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js"],"names":["React","useContext","useEffect","useState","Entry","EntryHeading","PayrollPalClient","Heartbeat","CoreContext","AuthContext","EntriesList","coreContext","authContext","payPeriodStart","payPeriodEnd","loading","setLoading","console","log","hb","setInterval","catch","error","clearInterval","logout","getEntries","then","result","status_code","setError","setState","entries","firstName","payRate","totalHours","allApproved","setEntries","setFirstName","setPayRate","setTotalHours","map","entry","index"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient, { Heartbeat } from '../payroll-pal-client'\nimport { CoreContext } from './Core'\nimport AuthContext from '../AuthContext'\n\nfunction EntriesList() {\n    const coreContext = useContext(CoreContext)\n    const authContext = useContext(AuthContext)\n    const payPeriodStart = coreContext.payPeriodStart\n    const payPeriodEnd = coreContext.payPeriodEnd\n    const [loading, setLoading] = useState(true)\n\n    useEffect( () => {\n        console.log('test')\n        let hb = setInterval(function () {\n        Heartbeat().catch(\n            (error) => {\n                clearInterval(hb)\n                authContext.logout()\n            }\n        )\n        }, 30000)\n\n    PayrollPalClient.getEntries()\n    .then((result) => {\n        if(result.error){\n          if(result.status_code === 401){\n            coreContext.setError({error: \"Whoops! You are not logged in!\"})\n            authContext.logout()\n          }\n          else {\n            coreContext.setError({error: result.error})\n            authContext.logout()\n          }\n        }\n        else {\n          coreContext.setState({\n            loading: false,\n            entries: result['entries'],\n            firstName: result['firstName'],\n            payPeriodStart: result['payPeriodStart'],\n            payPeriodEnd: result['payPeriodEnd'],\n            payRate: result['payRate'],\n            totalHours: result['totalHours'],\n            allApproved: false,\n          })\n        }\n      })\n    }, [])\n\n    useEffect( () => {\n        setLoading(true)\n        PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd).then(\n            (result) => {\n                coreContext.setEntries(result['entries'])\n                coreContext.setFirstName(result['firstName'])\n                coreContext.setPayRate(result['payRate'])\n                coreContext.setTotalHours(result['totalHours'])\n                setLoading(false)\n            },\n        )\n    }, [payPeriodStart, payPeriodEnd]);\n\n    return(\n\n        <div>\n            {\n                coreContext.payPeriodStart ? <EntryHeading /> : <div></div>\n            }\n            <div className={ loading ? \"container-fluid px-4\" : \"d-none\"}> \n                <h5 className=\"display-4\">Loading...</h5>\n            </div>\n            <div className={ loading ? \"d-none\" : \"\"}>\n                { coreContext['entries'] ? coreContext['entries'].map((entry, index) => {\n                    return <Entry {...entry} index={index} key={index} /> \n                }) : null}\n            </div>\n\n        </div>\n    )\n}\n\nexport default EntriesList;"]},"metadata":{},"sourceType":"module"}
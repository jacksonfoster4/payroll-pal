{"ast":null,"code":"class PayrollPalClient {\n  static login(username, password) {\n    //let ppc = new PayrollPalClient()\n    PayrollPalClient.setIsAuthenticated(true);\n    PayrollPalClient.setAuthToken(\"AUTH-TOKEN-XXXXX123456XX\"); //return ppc\n  }\n\n  logout() {\n    this.authToken = null;\n    this.deleteAuthToken();\n    this.isAuthenticated = false;\n    this.deleteIsAuthenticated();\n  }\n\n  static getAuthToken() {\n    return PayrollPalClient.getCookie('authToken');\n  }\n\n  static getIsAuthenticated() {\n    return PayrollPalClient.getCookie('isAuthenticated');\n  }\n\n  static setAuthToken(token) {\n    this.authToken = token;\n    PayrollPalClient.setCookie({\n      'authToken': token\n    });\n  }\n\n  static setIsAuthenticated(val) {\n    this.isAuthenticated = val;\n    PayrollPalClient.setCookie({\n      'isAuthenticated': val\n    });\n  }\n\n  deleteAuthToken() {\n    this.authToken = undefined;\n    this.deleteCookie('authToken');\n  }\n\n  deleteIsAuthenticated() {\n    this.isAuthenticated = undefined;\n    this.deleteCookie('isAuthenticated');\n  }\n\n  static getCookie() {\n    return document.cookie;\n  }\n\n  static setCookie(obj) {\n    let cookieAsObj = PayrollPalClient.cookieAsObj();\n    Object.keys(obj).map(key => {\n      cookieAsObj[key] = obj[key];\n    });\n    console.log(cookieAsObj);\n    console.log(PayrollPalClient.cookieObjToCookieString(cookieAsObj));\n    return this.cookieObjToCookieString(cookieAsObj);\n  }\n\n  static getCookieValue(key) {\n    let cookieAsObj = PayrollPalClient.cookieAsObj();\n    return cookieAsObj[key];\n  }\n\n  static deleteCookie(key) {\n    let cookieAsObj = PayrollPalClient.cookieAsObj();\n    delete cookieAsObj[key];\n    return this.cookieObjToCookieString(cookieAsObj);\n  }\n\n  static cookieAsObj() {\n    let cookies = document.cookie;\n    cookies = cookies.split(\";\");\n    cookies = [cookies.map(el => el.split(\"=\"))];\n    let newCookie = {};\n    cookies.map(cookie => {\n      cookie.map(c => {\n        c[0] = c[0].replace(/\\s/g, '');\n        newCookie[c[0]] = c[1];\n      });\n    });\n    return newCookie;\n  }\n\n  static cookieObjToCookieString(cookieObj) {\n    let cookie = '';\n    Object.keys(cookieObj).map(key => {\n      cookie += \"\".concat(key, \"=\").concat(cookieObj[key], \"; \");\n    });\n    return cookie;\n  }\n\n}\n\nexport default PayrollPalClient;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/payroll-pal-client.js"],"names":["PayrollPalClient","login","username","password","setIsAuthenticated","setAuthToken","logout","authToken","deleteAuthToken","isAuthenticated","deleteIsAuthenticated","getAuthToken","getCookie","getIsAuthenticated","token","setCookie","val","undefined","deleteCookie","document","cookie","obj","cookieAsObj","Object","keys","map","key","console","log","cookieObjToCookieString","getCookieValue","cookies","split","el","newCookie","c","replace","cookieObj"],"mappings":"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","sourcesContent":["class PayrollPalClient  {\n    static login(username, password){\n        //let ppc = new PayrollPalClient()\n        PayrollPalClient.setIsAuthenticated(true);\n        PayrollPalClient.setAuthToken(\"AUTH-TOKEN-XXXXX123456XX\");\n        //return ppc\n    }\n    logout(){\n        this.authToken = null;\n        this.deleteAuthToken();\n        this.isAuthenticated = false;\n        this.deleteIsAuthenticated();\n    }\n\n    static getAuthToken(){\n        return PayrollPalClient.getCookie('authToken')\n    }\n    static getIsAuthenticated(){\n        return PayrollPalClient.getCookie('isAuthenticated')\n    }\n\n    static setAuthToken(token){\n        this.authToken = token;\n        PayrollPalClient.setCookie({'authToken': token})\n    }\n    static setIsAuthenticated(val){\n        this.isAuthenticated = val;\n        PayrollPalClient.setCookie({'isAuthenticated': val})\n    }\n\n    deleteAuthToken(){\n        this.authToken = undefined;\n        this.deleteCookie('authToken')\n    }\n    deleteIsAuthenticated(){\n        this.isAuthenticated = undefined;\n        this.deleteCookie('isAuthenticated')\n    }\n\n    static getCookie(){\n        return document.cookie\n    }\n\n    static setCookie(obj){\n        let cookieAsObj = PayrollPalClient.cookieAsObj()\n        Object.keys(obj).map(key => {\n            cookieAsObj[key] = obj[key]\n        })\n        console.log(cookieAsObj)\n        console.log(PayrollPalClient.cookieObjToCookieString(cookieAsObj))\n        return this.cookieObjToCookieString(cookieAsObj)\n    }\n\n    static getCookieValue(key){\n        let cookieAsObj = PayrollPalClient.cookieAsObj()\n        return cookieAsObj[key]\n    }\n\n    static deleteCookie(key){\n        let cookieAsObj = PayrollPalClient.cookieAsObj()\n        delete cookieAsObj[key]\n        return this.cookieObjToCookieString(cookieAsObj)\n    }\n\n    static cookieAsObj(){\n        let cookies = document.cookie;\n        cookies = cookies.split(\";\");\n        cookies = [cookies.map(el => el.split(\"=\"))]\n        let newCookie = {}\n        cookies.map(cookie => {\n            cookie.map(c => {\n\n                c[0] = c[0].replace(/\\s/g, '')\n                newCookie[c[0]] = c[1]\n            })\n        })\n        return newCookie\n    }\n\n    static cookieObjToCookieString(cookieObj){\n        let cookie = '';\n        Object.keys(cookieObj).map(key => {\n            cookie += `${key}=${cookieObj[key]}; `\n        })\n        return cookie\n    }\n\n}\n\nexport default PayrollPalClient;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from\"react\";import Entry from\"./Entry\";import EntryHeading from\"./EntryHeading\";import PayrollPalClient,{Heartbeat}from'../payroll-pal-client';import{CoreContext}from'./Core';import AuthContext from'../AuthContext';function EntriesList(){var coreContext=useContext(CoreContext);var authContext=useContext(AuthContext);var payPeriodStart=coreContext.payPeriodStart;var payPeriodEnd=coreContext.payPeriodEnd;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];useEffect(function(){var hb=setInterval(function(){Heartbeat().catch(function(error){clearInterval(hb);authContext.logout();});},30000);PayrollPalClient.getEntries().then(function(result){if(result.error){if(result.status_code===401){coreContext.setError(\"Whoops! You are not logged in!\");authContext.logout();}else{coreContext.setError({error:result.error});authContext.logout();}}else{coreContext.setState({loading:false,entries:result['entries'],firstName:result['firstName'],payPeriodStart:result['payPeriodStart'],payPeriodEnd:result['payPeriodEnd'],payRate:result['payRate'],totalHours:result['totalHours'],allApproved:false});}});},[]);useEffect(function(){setLoading(true);PayrollPalClient.getEntries(payPeriodStart,payPeriodEnd).then(function(result){coreContext.setEntries(result['entries']);coreContext.setFirstName(result['firstName']);coreContext.setPayRate(result['payRate']);coreContext.setTotalHours(result['totalHours']);setLoading(false);});},[payPeriodStart,payPeriodEnd]);return React.createElement(\"div\",null,coreContext.payPeriodStart?React.createElement(EntryHeading,null):React.createElement(\"div\",null),React.createElement(\"div\",{className:loading?\"container-fluid px-4\":\"d-none\"},React.createElement(\"h5\",{className:\"display-4\"},\"Loading...\")),React.createElement(\"div\",{className:loading?\"d-none\":\"\"},coreContext['entries']?coreContext['entries'].map(function(entry,index){return React.createElement(Entry,Object.assign({},entry,{index:index,key:index}));}):null));}export default EntriesList;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js"],"names":["React","useContext","useEffect","useState","Entry","EntryHeading","PayrollPalClient","Heartbeat","CoreContext","AuthContext","EntriesList","coreContext","authContext","payPeriodStart","payPeriodEnd","loading","setLoading","hb","setInterval","catch","error","clearInterval","logout","getEntries","then","result","status_code","setError","setState","entries","firstName","payRate","totalHours","allApproved","setEntries","setFirstName","setPayRate","setTotalHours","map","entry","index"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient, { Heartbeat } from '../payroll-pal-client'\nimport { CoreContext } from './Core'\nimport AuthContext from '../AuthContext'\n\nfunction EntriesList() {\n    const coreContext = useContext(CoreContext)\n    const authContext = useContext(AuthContext)\n    const payPeriodStart = coreContext.payPeriodStart\n    const payPeriodEnd = coreContext.payPeriodEnd\n    const [loading, setLoading] = useState(true)\n\n    useEffect( () => {\n        let hb = setInterval(function () {\n        Heartbeat().catch(\n            (error) => {\n                clearInterval(hb)\n                authContext.logout()\n            }\n        )\n        }, 30000)\n\n    PayrollPalClient.getEntries()\n    .then((result) => {\n        if(result.error){\n          if(result.status_code === 401){\n            coreContext.setError(\"Whoops! You are not logged in!\")\n            authContext.logout()\n          }\n          else {\n            coreContext.setError({error: result.error})\n            authContext.logout()\n          }\n        }\n        else {\n          coreContext.setState({\n            loading: false,\n            entries: result['entries'],\n            firstName: result['firstName'],\n            payPeriodStart: result['payPeriodStart'],\n            payPeriodEnd: result['payPeriodEnd'],\n            payRate: result['payRate'],\n            totalHours: result['totalHours'],\n            allApproved: false,\n          })\n        }\n      })\n    }, [])\n\n    useEffect( () => {\n        setLoading(true)\n        PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd).then(\n            (result) => {\n                coreContext.setEntries(result['entries'])\n                coreContext.setFirstName(result['firstName'])\n                coreContext.setPayRate(result['payRate'])\n                coreContext.setTotalHours(result['totalHours'])\n                setLoading(false)\n            },\n        )\n    }, [payPeriodStart, payPeriodEnd]);\n\n    return(\n\n        <div>\n            {\n                coreContext.payPeriodStart ? <EntryHeading /> : <div></div>\n            }\n            <div className={ loading ? \"container-fluid px-4\" : \"d-none\"}> \n                <h5 className=\"display-4\">Loading...</h5>\n            </div>\n            <div className={ loading ? \"d-none\" : \"\"}>\n                { coreContext['entries'] ? coreContext['entries'].map((entry, index) => {\n                    return <Entry {...entry} index={index} key={index} /> \n                }) : null}\n            </div>\n\n        </div>\n    )\n}\n\nexport default EntriesList;"]},"metadata":{},"sourceType":"module"}
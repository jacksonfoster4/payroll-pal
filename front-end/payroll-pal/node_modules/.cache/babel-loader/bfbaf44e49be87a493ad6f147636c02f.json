{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/Core.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Greeting from './Greeting';\nimport EntriesList from './EntriesList';\nimport PayrollPalClient, { Heartbeat } from '../payroll-pal-client';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport AuthContext from '../AuthContext';\nimport ErrorBoundary from './ErrorBoundary';\nconst CoreContext = React.createContext({});\n\nclass Core extends React.Component {\n  constructor() {\n    this.props = this.props.bind(this);\n  }\n\n  componentDidMount() {\n    let id = setInterval(function () {\n      Heartbeat().catch(error => {\n        clearInterval(id);\n        console.log('error');\n        this.props.context.logout();\n      });\n    });\n    PayrollPalClient.getEntries().then(result => {\n      if (result.error) {\n        if (result.status_code === 401) {\n          this.setState({\n            error401: true\n          });\n          this.props.context.logout();\n        } else {\n          this.setState({\n            error: true\n          });\n          this.props.context.logout();\n        }\n      } else {\n        this.setState({\n          loading: false,\n          entries: result['entries'],\n          firstName: result['firstName'],\n          payPeriodStart: result['payPeriodStart'],\n          payPeriodEnd: result['payPeriodEnd'],\n          payRate: result['payRate'],\n          totalHours: result['totalHours'],\n          allApproved: false\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.error401) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            error: \"Whoops! You'll need to login again!\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ErrorBoundary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(CoreContext.Provider, {\n        value: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.loading ? React.createElement(\"div\", {\n        className: \"text-center container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"display-4 loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Loading...\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Greeting, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(EntriesList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))))));\n    }\n  }\n\n}\n\nexport default (props => React.createElement(AuthContext.Consumer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121\n  },\n  __self: this\n}, context => {\n  return React.createElement(Core, Object.assign({\n    context: context\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n}));\nexport { CoreContext };","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/Core.js"],"names":["React","Header","Greeting","EntriesList","PayrollPalClient","Heartbeat","withRouter","Redirect","AuthContext","ErrorBoundary","CoreContext","createContext","Core","Component","constructor","props","bind","componentDidMount","id","setInterval","catch","error","clearInterval","console","log","context","logout","getEntries","then","result","status_code","setState","error401","loading","entries","firstName","payPeriodStart","payPeriodEnd","payRate","totalHours","allApproved","render","state","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,IAA2BC,SAA3B,QAA4C,uBAA5C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,WAAW,GAAGV,KAAK,CAACW,aAAN,CAAoB,EAApB,CAApB;;AAEA,MAAMC,IAAN,SAAmBZ,KAAK,CAACa,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,QAAIC,EAAE,GAAGC,WAAW,CAAC,YAAY;AAC/Bd,MAAAA,SAAS,GAAGe,KAAZ,CACGC,KAAD,IAAW;AACTC,QAAAA,aAAa,CAACJ,EAAD,CAAb;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAKT,KAAL,CAAWU,OAAX,CAAmBC,MAAnB;AACD,OALH;AAOD,KARmB,CAApB;AAUAtB,IAAAA,gBAAgB,CAACuB,UAAjB,GACCC,IADD,CACOC,MAAD,IAAY;AACd,UAAGA,MAAM,CAACR,KAAV,EAAgB;AACd,YAAGQ,MAAM,CAACC,WAAP,KAAuB,GAA1B,EAA8B;AAC5B,eAAKC,QAAL,CAAc;AAACC,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACA,eAAKjB,KAAL,CAAWU,OAAX,CAAmBC,MAAnB;AACD,SAHD,MAIK;AACH,eAAKK,QAAL,CAAc;AAACV,YAAAA,KAAK,EAAE;AAAR,WAAd;AACA,eAAKN,KAAL,CAAWU,OAAX,CAAmBC,MAAnB;AACD;AACF,OATD,MAUK;AACH,aAAKK,QAAL,CAAc;AACZE,UAAAA,OAAO,EAAE,KADG;AAEZC,UAAAA,OAAO,EAAEL,MAAM,CAAC,SAAD,CAFH;AAGZM,UAAAA,SAAS,EAAEN,MAAM,CAAC,WAAD,CAHL;AAIZO,UAAAA,cAAc,EAAEP,MAAM,CAAC,gBAAD,CAJV;AAKZQ,UAAAA,YAAY,EAAER,MAAM,CAAC,cAAD,CALR;AAMZS,UAAAA,OAAO,EAAET,MAAM,CAAC,SAAD,CANH;AAOZU,UAAAA,UAAU,EAAEV,MAAM,CAAC,YAAD,CAPN;AAQZW,UAAAA,WAAW,EAAE;AARD,SAAd;AAUD;AAEF,KAzBH;AA0BD;;AAkCDC,EAAAA,MAAM,GAAE;AACN,QAAG,KAAKC,KAAL,CAAWV,QAAd,EAAuB;AACrB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACnBW,UAAAA,QAAQ,EAAE,QADS;AAEnBD,UAAAA,KAAK,EAAE;AAAErB,YAAAA,KAAK,EAAE;AAAT;AAFY,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAID,KALD,MAMK;AACH,aACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE,KAAKqB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKA,KAAL,CAAWT,OAAX,GACA;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADA,GAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,CAFF,CADF,CADF,CADF;AAoBD;AACF;;AAzGgC;;AA4GnC,gBAAgBlB,KAAD,IACb,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIU,OAAD,IAAa;AAAE,SAAO,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEA;AAAf,KAA4BV,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AAA+C,CADjE,CADF;AAKA,SAASL,WAAT","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Greeting from './Greeting';\nimport EntriesList from './EntriesList'\nimport PayrollPalClient, { Heartbeat } from '../payroll-pal-client';\nimport { withRouter, Redirect } from 'react-router-dom'\nimport AuthContext from '../AuthContext';\nimport ErrorBoundary from './ErrorBoundary'\n\nconst CoreContext = React.createContext({})\n\nclass Core extends React.Component {\n  constructor() {\n    this.props = this.props.bind(this)\n  }\n\n  componentDidMount(){\n    let id = setInterval(function () {\n      Heartbeat().catch(\n        (error) => {\n          clearInterval(id)\n          console.log('error')\n          this.props.context.logout()\n        }\n      )\n    })\n\n    PayrollPalClient.getEntries()\n    .then((result) => {\n        if(result.error){\n          if(result.status_code === 401){\n            this.setState({error401: true})\n            this.props.context.logout()\n          }\n          else {\n            this.setState({error: true})\n            this.props.context.logout()\n          }\n        }\n        else {\n          this.setState({\n            loading: false,\n            entries: result['entries'],\n            firstName: result['firstName'],\n            payPeriodStart: result['payPeriodStart'],\n            payPeriodEnd: result['payPeriodEnd'],\n            payRate: result['payRate'],\n            totalHours: result['totalHours'],\n            allApproved: false,\n          })\n        }\n        \n      })\n  }\n\n  state = {\n    loading: true,\n    error: null,\n    error401: null,\n    setEntries: (value) => {\n      this.setState({ entries: value })\n    },\n    setPayRate: (value) => {\n        this.setState({ payRate: value })\n    },\n\n    setPayPeriodStart: (value) => {\n      this.setState({ payPeriodStart: value })\n    },\n\n    setPayPeriodEnd: (value) => {\n      this.setState({ payPeriodEnd: value })\n    },\n\n    setTotalHours: (value) => {\n      this.setState({ totalHours: value })\n    },\n\n    approveAll: () => {\n      this.setState({ allApproved: true })\n      PayrollPalClient.approveAll()\n    },\n    setFirstName: (value) => {\n      this.setState({ firstName: value })\n    }\n  }\n\n  render(){\n    if(this.state.error401){\n      return <Redirect to={{\n        pathname: '/login',\n        state: { error: \"Whoops! You'll need to login again!\" }\n    }} />\n    }\n    else {\n      return (\n        <ErrorBoundary>\n          <CoreContext.Provider value={this.state}>\n            <div className=\"App\">\n              <Header />\n              <div className=\"App-body\">\n              { this.state.loading ? \n                <div className=\"text-center container-fluid\">\n                  <div className=\"display-4 loading\">Loading...</div>\n                  </div> : \n                <div>\n                  <Greeting />\n                  <EntriesList />\n                </div>\n                }\n              </div> \n            </div>\n          </CoreContext.Provider>\n        </ErrorBoundary>\n      );\n    }\n  }\n}\n\nexport default (props) => (\n  <AuthContext.Consumer>\n   { (context) => { return <Core context={context} {...props } /> } }\n  </AuthContext.Consumer>\n);\nexport { CoreContext };"]},"metadata":{},"sourceType":"module"}
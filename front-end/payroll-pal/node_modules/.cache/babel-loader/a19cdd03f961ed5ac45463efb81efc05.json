{"ast":null,"code":"import Cookies from 'js-cookie';\nconst apiUrl = 'localhost:5000'; // const apiUrl = 'payrollpal.thefoundationworks.com/api\n\nclass PayrollPalClient {\n  static login(...args) {\n    let username = args[0].username;\n    let password = args[0].password;\n    let demo = args[0].demo;\n    /* \n    if(demo) {\n        ajax.post({\n        'url': `${apiUrl}/demo`,\n        'body': {\n            'demo': demo,\n        }\n    })\n    }\n    else {\n        ajax.post({\n            'url': `${apiUrl}/login`,\n            'body': {\n                'username': username,\n                'password': password,\n            }\n        }) \n    }*/\n\n    console.log(username);\n    console.log(password);\n    console.log(demo);\n\n    if (demo) {\n      Cookies.set('demo', demo);\n    }\n\n    PayrollPalClient.setAuthToken(\"AUTH-TOKEN-XXXXX123456XX\"); // if authenticated\n\n    return true; // else\n    // return false\n  }\n\n  static getEntries(start, end) {\n    fetch(\"\".concat(apiUrl, \"/get-entries\")).then(response => {\n      response.text().then(text => {\n        return response.json();\n      });\n    });\n    /* \n    let token = Cookies.get('authToken')\n    ajax.post({\n        'url': `${apiUrl}/get-entries`,\n        'body': {\n            'token': token,\n            'start': start,\n            'end': end\n        }\n    }) \n    return {\n        'totalHours': 25.5,\n        'payRate': 18.00,\n        'payPeriodStart': [10,21,2019],\n        'payPeriodEnd': [10,27,2019],\n        'firstName': 'Jackson',\n        'entries': [\n            {\n                'date': [10,21,2019],\n                'day': 'Monday',\n                'hours': 8,\n                'approved': true,\n                'punches': [\n                    ['work', '9:00 AM', '2:30 PM'],\n                    ['meal', '2:30 PM', '3:00 PM'],\n                    ['meal', '3:00 PM', '5:30 PM'],\n                ]\n            },\n            {\n                'date': [10,22,2019],\n                'day': 'Tuesday',\n                'hours': 8,\n                'approved': false,\n                'punches': [\n                    ['work', '9:00 AM', '2:30 PM'],\n                    ['meal', '2:30 PM', '3:00 PM'],\n                    ['meal', '3:00 PM', '5:30 PM'],\n                ]\n            },\n            {\n                'date': [10,23,2019],\n                'day': 'Wednesday',\n                'hours': 9.5,\n                'approved': false,\n                'punches': [\n                    ['work', '9:00 AM', '2:30 PM'],\n                    ['meal', '2:30 PM', '3:00 PM'],\n                    ['work', '3:00 PM', '5:30 PM'],\n                ]\n            },\n            {\n                'date': [10,24,2019],\n                'day': 'Thursday',\n                'hours': 0,\n                'approved': false,\n                'punches': []\n            },\n            {\n                'date': [10,25,2019],\n                'day': 'Friday',\n                'hours': 0,\n                'approved': false,\n                'punches': []\n            },\n            {\n                'date': [10,26,2019],\n                'day': 'Saturday',\n                'hours': 0,\n                'approved': false,\n                'punches': []\n            },\n            {\n                'date': [10,27,2019],\n                'day': 'Sunday',\n                'hours': 0,\n                'approved': false,\n                'punches': []\n            },\n    ]} */\n  }\n\n  static updateEntry(entry) {\n    /* \n    ajax.post({\n        'url': `${apiUrl}/update-entry`,\n        'body': {\n            'token': token,\n            'entry': entry\n        }\n    }) \n    */\n    console.log(\"updated entry from ppc\");\n    console.log(\"Date: \".concat(entry.date));\n    console.log(\"Punches: \".concat(entry.punches));\n    console.log(\"Approved: \".concat(entry.approved));\n    return entry;\n  }\n\n  static logout() {\n    PayrollPalClient.deleteAuthToken();\n    Cookies.remove('demo');\n  }\n\n  static approveAll() {\n    /* ajax.post({\n        'url': `${apiUrl}/approve-all`,\n        'body': {\n            'token': token,\n            'start': start,\n            'end': end\n        }\n    }) */\n    console.log('All hours have been approved');\n  }\n\n  static getAuthToken() {\n    return Cookies.get('authToken');\n  }\n\n  static getIsAuthenticated() {\n    if (Cookies.get('authToken')) {\n      return true;\n    } else {\n      return false;\n    }\n    /* let isAuthenticated = ajax.post({\n        'url': `${apiUrl}/authenticate`\n        'body': {\n            'token': token\n        }\n    }) */\n\n  }\n\n  static setAuthToken(token) {\n    Cookies.set('authToken', token);\n  }\n\n  static deleteAuthToken() {\n    Cookies.remove('authToken');\n  }\n\n}\n\nexport default PayrollPalClient;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/payroll-pal-client.js"],"names":["Cookies","apiUrl","PayrollPalClient","login","args","username","password","demo","console","log","set","setAuthToken","getEntries","start","end","fetch","then","response","text","json","updateEntry","entry","date","punches","approved","logout","deleteAuthToken","remove","approveAll","getAuthToken","get","getIsAuthenticated","token"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,MAAMC,MAAM,GAAG,gBAAf,C,CACA;;AACA,MAAMC,gBAAN,CAAwB;AACpB,SAAOC,KAAP,CAAa,GAAGC,IAAhB,EAAqB;AACjB,QAAIC,QAAQ,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQC,QAAvB;AACA,QAAIC,QAAQ,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQE,QAAvB;AACA,QAAIC,IAAI,GAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAAnB;AACA;;;;;;;;;;;;;;;;;;;AAkBAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAGA,IAAH,EAAQ;AACJP,MAAAA,OAAO,CAACU,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AACH;;AACDL,IAAAA,gBAAgB,CAACS,YAAjB,CAA8B,0BAA9B,EA5BiB,CA6BjB;;AACA,WAAO,IAAP,CA9BiB,CA+BjB;AACA;AACH;;AACD,SAAOC,UAAP,CAAkBC,KAAlB,EAAyBC,GAAzB,EAA6B;AACzBC,IAAAA,KAAK,WAAId,MAAJ,kBAAL,CACCe,IADD,CACMC,QAAQ,IAAI;AACZA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AACzB,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,OAFD;AAGD,KALL;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EH;;AACD,SAAOC,WAAP,CAAmBC,KAAnB,EAA0B;AACtB;;;;;;;;;AASAb,IAAAA,OAAO,CAACC,GAAR;AACAD,IAAAA,OAAO,CAACC,GAAR,iBAAqBY,KAAK,CAACC,IAA3B;AACAd,IAAAA,OAAO,CAACC,GAAR,oBAAwBY,KAAK,CAACE,OAA9B;AACAf,IAAAA,OAAO,CAACC,GAAR,qBAAyBY,KAAK,CAACG,QAA/B;AACA,WAAOH,KAAP;AACH;;AACD,SAAOI,MAAP,GAAe;AACXvB,IAAAA,gBAAgB,CAACwB,eAAjB;AACA1B,IAAAA,OAAO,CAAC2B,MAAR,CAAe,MAAf;AACH;;AACD,SAAOC,UAAP,GAAmB;AACf;;;;;;;;AAQApB,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;;AACD,SAAOoB,YAAP,GAAqB;AACjB,WAAO7B,OAAO,CAAC8B,GAAR,CAAY,WAAZ,CAAP;AACH;;AAED,SAAOC,kBAAP,GAA2B;AACvB,QAAG/B,OAAO,CAAC8B,GAAR,CAAY,WAAZ,CAAH,EAA4B;AACxB,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAP;AACH;AACD;;;;;;;AAMH;;AAED,SAAOnB,YAAP,CAAoBqB,KAApB,EAA0B;AACtBhC,IAAAA,OAAO,CAACU,GAAR,CAAY,WAAZ,EAAyBsB,KAAzB;AACH;;AAED,SAAON,eAAP,GAAwB;AACpB1B,IAAAA,OAAO,CAAC2B,MAAR,CAAe,WAAf;AACH;;AAnLmB;;AAuLxB,eAAezB,gBAAf","sourcesContent":["import Cookies from 'js-cookie'\n\nconst apiUrl = 'localhost:5000'\n// const apiUrl = 'payrollpal.thefoundationworks.com/api\nclass PayrollPalClient  {\n    static login(...args){\n        let username = args[0].username\n        let password = args[0].password\n        let demo = args[0].demo\n        /* \n        if(demo) {\n            ajax.post({\n            'url': `${apiUrl}/demo`,\n            'body': {\n                'demo': demo,\n            }\n        })\n        }\n        else {\n            ajax.post({\n                'url': `${apiUrl}/login`,\n                'body': {\n                    'username': username,\n                    'password': password,\n                }\n            }) \n        }*/\n        console.log(username)\n        console.log(password)\n        console.log(demo)\n        if(demo){\n            Cookies.set('demo', demo)\n        }\n        PayrollPalClient.setAuthToken(\"AUTH-TOKEN-XXXXX123456XX\");\n        // if authenticated\n        return true\n        // else\n        // return false\n    }\n    static getEntries(start, end){\n        fetch(`${apiUrl}/get-entries`)\n        .then(response => {\n              response.text().then(text => {\n                  return response.json()\n              })\n            })\n            \n        /* \n        let token = Cookies.get('authToken')\n        ajax.post({\n            'url': `${apiUrl}/get-entries`,\n            'body': {\n                'token': token,\n                'start': start,\n                'end': end\n            }\n        }) \n        return {\n            'totalHours': 25.5,\n            'payRate': 18.00,\n            'payPeriodStart': [10,21,2019],\n            'payPeriodEnd': [10,27,2019],\n            'firstName': 'Jackson',\n            'entries': [\n                {\n                    'date': [10,21,2019],\n                    'day': 'Monday',\n                    'hours': 8,\n                    'approved': true,\n                    'punches': [\n                        ['work', '9:00 AM', '2:30 PM'],\n                        ['meal', '2:30 PM', '3:00 PM'],\n                        ['meal', '3:00 PM', '5:30 PM'],\n                    ]\n                },\n                {\n                    'date': [10,22,2019],\n                    'day': 'Tuesday',\n                    'hours': 8,\n                    'approved': false,\n                    'punches': [\n                        ['work', '9:00 AM', '2:30 PM'],\n                        ['meal', '2:30 PM', '3:00 PM'],\n                        ['meal', '3:00 PM', '5:30 PM'],\n                    ]\n                },\n                {\n                    'date': [10,23,2019],\n                    'day': 'Wednesday',\n                    'hours': 9.5,\n                    'approved': false,\n                    'punches': [\n                        ['work', '9:00 AM', '2:30 PM'],\n                        ['meal', '2:30 PM', '3:00 PM'],\n                        ['work', '3:00 PM', '5:30 PM'],\n                    ]\n                },\n                {\n                    'date': [10,24,2019],\n                    'day': 'Thursday',\n                    'hours': 0,\n                    'approved': false,\n                    'punches': []\n                },\n                {\n                    'date': [10,25,2019],\n                    'day': 'Friday',\n                    'hours': 0,\n                    'approved': false,\n                    'punches': []\n                },\n                {\n                    'date': [10,26,2019],\n                    'day': 'Saturday',\n                    'hours': 0,\n                    'approved': false,\n                    'punches': []\n                },\n                {\n                    'date': [10,27,2019],\n                    'day': 'Sunday',\n                    'hours': 0,\n                    'approved': false,\n                    'punches': []\n                },\n        ]} */\n    }\n    static updateEntry(entry) {\n        /* \n        ajax.post({\n            'url': `${apiUrl}/update-entry`,\n            'body': {\n                'token': token,\n                'entry': entry\n            }\n        }) \n        */\n        console.log(`updated entry from ppc`)\n        console.log(`Date: ${entry.date}`)\n        console.log(`Punches: ${entry.punches}`)\n        console.log(`Approved: ${entry.approved}`)\n        return entry\n    }\n    static logout(){\n        PayrollPalClient.deleteAuthToken();\n        Cookies.remove('demo')\n    }\n    static approveAll(){\n        /* ajax.post({\n            'url': `${apiUrl}/approve-all`,\n            'body': {\n                'token': token,\n                'start': start,\n                'end': end\n            }\n        }) */\n        console.log('All hours have been approved')\n    }\n    static getAuthToken(){\n        return Cookies.get('authToken')\n    }\n\n    static getIsAuthenticated(){\n        if(Cookies.get('authToken')){\n            return true\n        }\n        else {\n            return false\n        }\n        /* let isAuthenticated = ajax.post({\n            'url': `${apiUrl}/authenticate`\n            'body': {\n                'token': token\n            }\n        }) */\n    }\n\n    static setAuthToken(token){\n        Cookies.set('authToken', token)\n    }\n\n    static deleteAuthToken(){\n        Cookies.remove('authToken')\n    }\n\n}\n\nexport default PayrollPalClient;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient, { Heartbeat } from '../payroll-pal-client';\nimport { CoreContext } from './Core';\nimport AuthContext from '../AuthContext';\n\nfunction EntriesList() {\n  const coreContext = useContext(CoreContext);\n  const authContext = useContext(AuthContext);\n  const payPeriodStart = coreContext.payPeriodStart;\n  const payPeriodEnd = coreContext.payPeriodEnd;\n  useEffect(() => {\n    let hb = setInterval(function () {\n      Heartbeat().catch(error => {\n        clearInterval(hb);\n        authContext.logout();\n      });\n    }, 30000);\n    PayrollPalClient.getEntries().then(result => {\n      if (result.error) {\n        if (result.status_code === 401) {\n          coreContext.setState({\n            error401: true\n          });\n          authContext.logout();\n        } else {\n          coreContext.setState({\n            error: true\n          });\n          authContext.logout();\n        }\n      } else {\n        coreContext.setState({\n          loading: false,\n          entries: result['entries'],\n          firstName: result['firstName'],\n          payPeriodStart: result['payPeriodStart'],\n          payPeriodEnd: result['payPeriodEnd'],\n          payRate: result['payRate'],\n          totalHours: result['totalHours'],\n          allApproved: false\n        });\n      }\n    });\n  });\n  useEffect(() => {\n    coreContext.setLoading(true);\n    console.log(coreContext.loading);\n    PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd).then(result => {\n      coreContext.setState(result);\n    });\n    coreContext.setLoading(false);\n  }, [payPeriodStart, payPeriodEnd]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, coreContext.payPeriodStart ? React.createElement(EntryHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), coreContext['entries'] ? coreContext['entries'].map((entry, index) => {\n    return React.createElement(Entry, Object.assign({}, entry, {\n      index: index,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }) : null);\n}\n\nexport default EntriesList;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js"],"names":["React","useContext","useEffect","useState","Entry","EntryHeading","PayrollPalClient","Heartbeat","CoreContext","AuthContext","EntriesList","coreContext","authContext","payPeriodStart","payPeriodEnd","hb","setInterval","catch","error","clearInterval","logout","getEntries","then","result","status_code","setState","error401","loading","entries","firstName","payRate","totalHours","allApproved","setLoading","console","log","map","entry","index"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient, { Heartbeat } from '../payroll-pal-client'\nimport { CoreContext } from './Core'\nimport AuthContext from '../AuthContext'\n\nfunction EntriesList() {\n    const coreContext = useContext(CoreContext)\n    const authContext = useContext(AuthContext)\n    const payPeriodStart = coreContext.payPeriodStart\n    const payPeriodEnd = coreContext.payPeriodEnd\n\n\n    useEffect( () => {\n\n        let hb = setInterval(function () {\n        Heartbeat().catch(\n            (error) => {\n                clearInterval(hb)\n                authContext.logout()\n            }\n        )\n        }, 30000)\n\n    PayrollPalClient.getEntries()\n    .then((result) => {\n        if(result.error){\n          if(result.status_code === 401){\n            coreContext.setState({error401: true})\n            authContext.logout()\n          }\n          else {\n            coreContext.setState({error: true})\n            authContext.logout()\n          }\n        }\n        else {\n          coreContext.setState({\n            loading: false,\n            entries: result['entries'],\n            firstName: result['firstName'],\n            payPeriodStart: result['payPeriodStart'],\n            payPeriodEnd: result['payPeriodEnd'],\n            payRate: result['payRate'],\n            totalHours: result['totalHours'],\n            allApproved: false,\n          })\n        }\n      })\n    })\n\n    useEffect( () => {\n        coreContext.setLoading(true)\n        console.log(coreContext.loading)\n        PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd).then(\n            (result) => {\n                coreContext.setState(result)\n            },\n        )\n        coreContext.setLoading(false)\n    }, [payPeriodStart, payPeriodEnd]);\n\n    return(\n\n        <div>\n            {\n                coreContext.payPeriodStart ? <EntryHeading /> : <div></div>\n            }\n            { coreContext['entries'] ? coreContext['entries'].map((entry, index) => {\n                return <Entry {...entry} index={index} key={index} /> \n            }) : null}\n\n        </div>\n    )\n}\n\nexport default EntriesList;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"class PayrollPalClient {\n  static login(username, password) {\n    let ppc = new PayrollPalClient();\n    ppc.setIsAuthenticated(true);\n    ppc.setAuthToken(\"AUTH-TOKEN-XXXXXXX\");\n    return ppc;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.deleteAuthToken();\n    this.isAuthenticated = false;\n    this.deleteIsAuthenticated();\n  }\n\n  getAuthToken() {\n    return PayrollPalClient.getCookie('authToken');\n  }\n\n  getIsAuthenticated() {\n    return PayrollPalClient.getCookie('isAuthenticated');\n  }\n\n  setAuthToken(token) {\n    this.authToken = token;\n    PayrollPalClient.setCookie({\n      'authToken': token\n    });\n  }\n\n  setIsAuthenticated(val = false) {\n    this.isAuthenticated = val;\n    PayrollPalClient.setCookie({\n      'isAuthenticated': val\n    });\n  }\n\n  deleteAuthToken() {\n    this.authToken = undefined;\n    this.deleteCookie('authToken');\n  }\n\n  deleteIsAuthenticated() {\n    this.isAuthenticated = undefined;\n    this.deleteCookie('isAuthenticated');\n  }\n\n  static setCookie(obj) {\n    let cookie = document.cookie;\n\n    for (let key in obj) {\n      cookie += \"\".concat(key, \"=\").concat(obj[key], \"; \");\n    }\n\n    return document.cookie;\n  }\n\n  static getCookie(key) {\n    let cookie = document.cookie;\n    cookie = cookie.split(\";\");\n    cookie = [cookie.map(el => el.split(\"=\"))];\n    let cookieAsObj = {};\n\n    for (let c in cookie) {\n      cookieAsObj[c[0]] = c[1];\n    }\n\n    return cookieAsObj[key];\n  }\n\n  static deleteCookie(key) {\n    let cookie = document.cookie;\n    cookie = cookie.split(\";\");\n    cookie = [cookie.map(el => el.split(\"=\"))];\n    let cookieAsObj = {};\n\n    for (let c in cookie) {\n      cookieAsObj[c[0]] = c[1];\n    }\n\n    cookie = '';\n    delete cookieAsObj[key];\n    cookieAsObj.keys().map(key => {\n      cookie += \"\".concat(key, \"=\").concat(cookieAsObj[key], \"; \");\n    });\n    return cookie;\n  }\n\n}\n\nexport default PayrollPalClient;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/payroll-pal-client.js"],"names":["PayrollPalClient","login","username","password","ppc","setIsAuthenticated","setAuthToken","logout","authToken","deleteAuthToken","isAuthenticated","deleteIsAuthenticated","getAuthToken","getCookie","getIsAuthenticated","token","setCookie","val","undefined","deleteCookie","obj","cookie","document","key","split","map","el","cookieAsObj","c","keys"],"mappings":"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","sourcesContent":["class PayrollPalClient  {\n    static login(username, password){\n        let ppc = new PayrollPalClient()\n        ppc.setIsAuthenticated(true);\n        ppc.setAuthToken(\"AUTH-TOKEN-XXXXXXX\");\n        return ppc\n    }\n    logout(){\n        this.authToken = null;\n        this.deleteAuthToken();\n        this.isAuthenticated = false;\n        this.deleteIsAuthenticated();\n    }\n    \n    getAuthToken(){\n        return PayrollPalClient.getCookie('authToken')\n    }\n    getIsAuthenticated(){\n        return PayrollPalClient.getCookie('isAuthenticated')\n    }\n\n    setAuthToken(token){\n        this.authToken = token;\n        PayrollPalClient.setCookie({'authToken': token})\n    }\n    setIsAuthenticated(val=false){\n        this.isAuthenticated = val;\n        PayrollPalClient.setCookie({'isAuthenticated': val})\n    }\n\n    deleteAuthToken(){\n        this.authToken = undefined;\n        this.deleteCookie('authToken')\n    }\n    deleteIsAuthenticated(){\n        this.isAuthenticated = undefined;\n        this.deleteCookie('isAuthenticated')\n    }\n\n\n    static setCookie(obj){\n        let cookie = document.cookie;\n        for(let key in obj){\n            cookie += `${key}=${obj[key]}; `\n        }\n        return document.cookie\n    }\n\n    static getCookie(key){\n        let cookie = document.cookie;\n        cookie = cookie.split(\";\");\n        cookie = [cookie.map(el => el.split(\"=\"))]\n        let cookieAsObj = {}\n        for (let c in cookie){\n            cookieAsObj[c[0]] = c[1]\n        }\n        return cookieAsObj[key]\n    }\n\n    static deleteCookie(key){\n        let cookie = document.cookie;\n        cookie = cookie.split(\";\");\n        cookie = [cookie.map(el => el.split(\"=\"))]\n        let cookieAsObj = {}\n        for (let c in cookie){\n            cookieAsObj[c[0]] = c[1]\n        }\n        cookie = ''\n        delete cookieAsObj[key]\n        cookieAsObj.keys().map(key => {\n            cookie += `${key}=${cookieAsObj[key]}; `\n        })\n        return cookie\n    }\n}\n\nexport default PayrollPalClient;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/Core.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Greeting from './Greeting';\nimport EntriesList from './EntriesList';\nimport PayrollPalClient from '../payroll-pal-client';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport AuthContext from '../AuthContext';\nconst CoreContext = React.createContext({});\n\nclass Core extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      error: null,\n      error401: null,\n      setPayRate: value => {\n        this.setState({\n          payRate: value\n        });\n      },\n      setPayPeriodStart: value => {\n        this.setState({\n          payPeriodStart: value\n        });\n      },\n      setPayPeriodEnd: value => {\n        this.setState({\n          payPeriodEnd: value\n        });\n      },\n      setTotalHours: value => {\n        this.setState({\n          totalHours: value\n        });\n      },\n      approveAll: () => {\n        this.setState({\n          allApproved: true\n        });\n        PayrollPalClient.approveAll();\n      }\n    };\n  }\n\n  componentDidMount() {\n    PayrollPalClient.getEntries().then(result => {\n      console.log(result.error);\n      this.setState({\n        loading: false,\n        entries: result['entries'],\n        firstName: result['firstName'],\n        payPeriodStart: result['payPeriodStart'],\n        payPeriodEnd: result['payPeriodEnd'],\n        payRate: result['payRate'],\n        totalHours: result['totalHours'],\n        allApproved: false\n      });\n    }).catch(error => {\n      if (error.status_code === 401) {\n        console.log('test');\n        this.setState({\n          error401: true\n        });\n        this.props.context.logout();\n      } else if (error) {\n        this.setState({\n          error: true\n        });\n        this.props.context.logout();\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(CoreContext.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      className: \"text-center container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"display-4 loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Loading...\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Greeting, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(EntriesList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default (props => React.createElement(AuthContext.Consumer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, context => {\n  return React.createElement(Core, Object.assign({\n    context: context\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }));\n}));\nexport { CoreContext };","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/Core.js"],"names":["React","Header","Greeting","EntriesList","PayrollPalClient","withRouter","Redirect","AuthContext","CoreContext","createContext","Core","Component","state","loading","error","error401","setPayRate","value","setState","payRate","setPayPeriodStart","payPeriodStart","setPayPeriodEnd","payPeriodEnd","setTotalHours","totalHours","approveAll","allApproved","componentDidMount","getEntries","then","result","console","log","entries","firstName","catch","status_code","props","context","logout","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Greeting from './Greeting';\nimport EntriesList from './EntriesList'\nimport PayrollPalClient from '../payroll-pal-client';\nimport { withRouter, Redirect } from 'react-router-dom'\nimport AuthContext from '../AuthContext';\n\nconst CoreContext = React.createContext({})\n\nclass Core extends React.Component {\n  \n\n  componentDidMount(){\n    PayrollPalClient.getEntries()\n    .then((result) => {\n        console.log(result.error)\n        this.setState({\n          loading: false,\n          entries: result['entries'],\n          firstName: result['firstName'],\n          payPeriodStart: result['payPeriodStart'],\n          payPeriodEnd: result['payPeriodEnd'],\n          payRate: result['payRate'],\n          totalHours: result['totalHours'],\n          allApproved: false,\n        })\n      }).catch(error => {\n        if(error.status_code === 401){\n          console.log('test')\n          this.setState({error401: true})\n          this.props.context.logout()\n        }\n        else if(error){\n          this.setState({error: true})\n          this.props.context.logout()\n        }\n      })\n  }\n\n  state = {\n    loading: true,\n    error: null,\n    error401: null,\n    setPayRate: (value) => {\n        this.setState({ payRate: value })\n    },\n\n    setPayPeriodStart: (value) => {\n      this.setState({ payPeriodStart: value })\n    },\n\n    setPayPeriodEnd: (value) => {\n      this.setState({ payPeriodEnd: value })\n    },\n\n    setTotalHours: (value) => {\n      this.setState({ totalHours: value })\n    },\n\n    approveAll: () => {\n      this.setState({ allApproved: true })\n      PayrollPalClient.approveAll()\n    }\n  }\n\n  render(){\n    \n    return (\n      <CoreContext.Provider value={this.state}>\n        <div className=\"App\">\n          <Header />\n          <div className=\"App-body\">\n          { this.state.loading ? \n            <div className=\"text-center container-fluid\">\n              <div className=\"display-4 loading\">Loading...</div>\n              </div> : \n            <div>\n              <Greeting />\n              <EntriesList />\n            </div>\n            }\n          </div> \n        </div>\n      </CoreContext.Provider>\n    );\n\n  }\n}\n\nexport default (props) => (\n  <AuthContext.Consumer>\n   { (context) => { return <Core context={context} {...props } /> } }\n  </AuthContext.Consumer>\n);\nexport { CoreContext };"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/node_modules/@babel/runtime/helpers/esm/createClass\";import Cookies from'js-cookie';var apiUrl='http://localhost:5000';// const apiUrl = 'payrollpal.thefoundationworks.com/api\nvar PayrollPalClient=/*#__PURE__*/function(){function PayrollPalClient(){_classCallCheck(this,PayrollPalClient);}_createClass(PayrollPalClient,null,[{key:\"sendRequest\",value:function(){var _sendRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(path,method,body){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(apiUrl).concat(path),{headers:new Headers({\"Content-Type\":'application/json'}),method:method?method:'POST',body:JSON.stringify(body)}).then(function(res){return res.json();}).then(function(result){return result;},function(error){return error;});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));function sendRequest(_x,_x2,_x3){return _sendRequest.apply(this,arguments);}return sendRequest;}()},{key:\"sendAuthedRequest\",value:function(){var _sendAuthedRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(path,method,body){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(apiUrl).concat(path),{headers:new Headers({\"Content-Type\":'application/json',\"Authorization\":'JWT '+PayrollPalClient.getAuthToken()}),method:method?method:'POST',body:JSON.stringify(body)}).then(function(res){return res.json();}).then(function(result){return result;},function(error){return error;});case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));function sendAuthedRequest(_x4,_x5,_x6){return _sendAuthedRequest.apply(this,arguments);}return sendAuthedRequest;}()},{key:\"login\",value:function login(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}var username=args[0].username;var password=args[0].password;var body={'username':username,'password':password};var demo=args[0].demo;return PayrollPalClient.sendRequest('/auth','POST',body).then(function(result){var token=result['access_token'];PayrollPalClient.setAuthToken(token);return result;},function(error){return error;});}},{key:\"getEntries\",value:function getEntries(start,end){if(!start){var d=new Date('October 21, 2019');start=[d.getMonth()+1,d.getDate(),d.getFullYear()];}if(!end){var _d=new Date('October 27, 2019');end=[_d.getMonth()+1,_d.getDate(),_d.getFullYear()];}var body={'start':start,'end':end};return PayrollPalClient.sendAuthedRequest('/get-entries','POST',body);}},{key:\"updateEntry\",value:function updateEntry(entry){var body={'entry':entry};return PayrollPalClient.sendAuthedRequest('/update-entry','POST',body);}},{key:\"approveAll\",value:function approveAll(start,end){var body={'start':start,'end':end};return PayrollPalClient.sendAuthedRequest('/approve-all','POST',body);}},{key:\"logout\",value:function logout(){PayrollPalClient.deleteAuthToken();Cookies.remove('demo');}},{key:\"getAuthToken\",value:function getAuthToken(){return Cookies.get('authToken');}},{key:\"getIsAuthenticated\",value:function(){var _getIsAuthenticated=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return PayrollPalClient.sendAuthedRequest('/verify','GET').then(function(result){return result.error?false:true;});case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},_callee3);}));function getIsAuthenticated(){return _getIsAuthenticated.apply(this,arguments);}return getIsAuthenticated;}()},{key:\"setAuthToken\",value:function setAuthToken(token){Cookies.set('authToken',token);}},{key:\"deleteAuthToken\",value:function deleteAuthToken(){Cookies.remove('authToken');}}]);return PayrollPalClient;}();var Heartbeat=function Heartbeat(){return PayrollPalClient.sendAuthedRequest('/hearbeat','GET').then(function(result){if(result.error){throw Error(\"Whoops! Something went wrong. Your token most likely expired or was invalid.\");}});};export default PayrollPalClient;export{Heartbeat};","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/payroll-pal-client.js"],"names":["Cookies","apiUrl","PayrollPalClient","path","method","body","fetch","headers","Headers","JSON","stringify","then","res","json","result","error","getAuthToken","args","username","password","demo","sendRequest","token","setAuthToken","start","end","d","Date","getMonth","getDate","getFullYear","sendAuthedRequest","entry","deleteAuthToken","remove","get","set","Heartbeat","Error"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie'\n\nconst apiUrl = 'http://localhost:5000'\n// const apiUrl = 'payrollpal.thefoundationworks.com/api\n\nclass PayrollPalClient  {\n\n    static async sendRequest(path, method, body){\n        return await fetch(`${apiUrl}${path}`, {\n\n            headers: new Headers({\n                \"Content-Type\": 'application/json',\n            }),\n            method: method ? method : 'POST',\n            body: JSON.stringify(body),\n\n        })\n        .then(res => res.json())\n        .then(\n            (result) => {\n                return result\n            },\n            (error) => {\n                return error\n            }\n        )\n    }\n\n    static async sendAuthedRequest(path, method, body){\n        return await fetch(`${apiUrl}${path}`, {\n\n            headers: new Headers({\n                \"Content-Type\": 'application/json',\n                \"Authorization\": 'JWT ' + PayrollPalClient.getAuthToken()\n            }),\n            method: method ? method : 'POST',\n            body: JSON.stringify(body),\n\n        })\n        .then( res => res.json() )\n        .then(\n            (result) => {\n                return result\n            },\n            (error) => {\n                return error\n            }\n        )\n    }\n    \n    static login(...args) { \n        let username = args[0].username\n        let password = args[0].password\n        let body = {'username': username, 'password': password}\n        let demo = args[0].demo\n\n        return PayrollPalClient.sendRequest('/auth', 'POST', body).then(\n            (result) => {\n                let token = result['access_token']\n                PayrollPalClient.setAuthToken(token)\n                return result\n            },\n            (error) => {\n                return error\n            }\n        )\n    }\n\n    static getEntries(start, end){\n        if(!start) {\n            let d = new Date('October 21, 2019')\n            start = [d.getMonth()+1, d.getDate(), d.getFullYear()]\n        }\n\n        if(!end) {\n            let d = new Date('October 27, 2019')\n            end = [d.getMonth()+1, d.getDate(), d.getFullYear()]\n        }\n        \n        let body = {'start': start, 'end': end}\n\n        return PayrollPalClient.sendAuthedRequest('/get-entries', 'POST', body)\n    }\n\n    static updateEntry(entry) {\n        let body = {'entry': entry}\n        return PayrollPalClient.sendAuthedRequest('/update-entry', 'POST', body)\n    }\n\n    static approveAll(start, end){\n        let body = {'start': start, 'end': end}\n        return PayrollPalClient.sendAuthedRequest('/approve-all', 'POST', body)\n    }\n\n    static logout(){\n        PayrollPalClient.deleteAuthToken();\n        Cookies.remove('demo')\n    }\n\n    static getAuthToken(){\n        return Cookies.get('authToken')\n    }\n\n    static async getIsAuthenticated(){\n        return await PayrollPalClient.sendAuthedRequest('/verify', 'GET').then(\n            (result) => {\n                return result.error ? false : true\n            }\n        )\n    }\n\n    static setAuthToken(token){\n        Cookies.set('authToken', token)\n    }\n\n    static deleteAuthToken(){\n        Cookies.remove('authToken')\n    }\n\n}\n\nconst Heartbeat = () => {\n    return PayrollPalClient.sendAuthedRequest('/hearbeat', 'GET').then(\n        (result) => {\n            if(result.error){\n                throw Error(\"Whoops! Something went wrong. Your token most likely expired or was invalid.\")\n            }\n        }\n    )\n}\n\nexport default PayrollPalClient;\nexport { Heartbeat }"]},"metadata":{},"sourceType":"module"}
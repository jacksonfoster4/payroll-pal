{"ast":null,"code":"import _slicedToArray from \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient from '../payroll-pal-client';\nimport CoreContext from './Core';\n\nfunction EntriesList() {\n  const _useState = useState('10/21/19'),\n        _useState2 = _slicedToArray(_useState, 2),\n        payPeriodStart = _useState2[0],\n        updatePayPeriodStart = _useState2[1];\n\n  const _useState3 = useState('10/25/19'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        payPeriodEnd = _useState4[0],\n        updatePayPeriodEnd = _useState4[1];\n\n  let entries = PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd);\n\n  const _useState5 = useState(entries['totalHours']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        totalHours = _useState6[0],\n        updateTotalHours = _useState6[1];\n\n  let coreContext = useContext(CoreContext);\n  useEffect(() => {\n    entries = PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd);\n    updateTotalHours(entries['totalHours']);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(EntryHeading, {\n    payPeriodStart: payPeriodStart,\n    payPeriodEnd: payPeriodEnd,\n    updatePayPeriodStart: updatePayPeriodStart,\n    updatePayPeriodEnd: updatePayPeriodEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), entries['entries'].map(entry => {\n    return React.createElement(Entry, Object.assign({}, entry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }));\n}\n\nexport default EntriesList;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js"],"names":["React","useContext","useState","useEffect","Entry","EntryHeading","PayrollPalClient","CoreContext","EntriesList","payPeriodStart","updatePayPeriodStart","payPeriodEnd","updatePayPeriodEnd","entries","getEntries","totalHours","updateTotalHours","coreContext","map","entry"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,WAAP,MAAwB,QAAxB;;AAEA,SAASC,WAAT,GAAuB;AAAA,oBAC4BN,QAAQ,CAAC,UAAD,CADpC;AAAA;AAAA,QACZO,cADY;AAAA,QACIC,oBADJ;;AAAA,qBAEwBR,QAAQ,CAAC,UAAD,CAFhC;AAAA;AAAA,QAEZS,YAFY;AAAA,QAEEC,kBAFF;;AAInB,MAAIC,OAAO,GAAGP,gBAAgB,CAACQ,UAAjB,CAA4BL,cAA5B,EAA4CE,YAA5C,CAAd;;AAJmB,qBAKqBT,QAAQ,CAACW,OAAO,CAAC,YAAD,CAAR,CAL7B;AAAA;AAAA,QAKZE,UALY;AAAA,QAKAC,gBALA;;AAMnB,MAAIC,WAAW,GAAGhB,UAAU,CAACM,WAAD,CAA5B;AAEAJ,EAAAA,SAAS,CAAE,MAAM;AACbU,IAAAA,OAAO,GAAGP,gBAAgB,CAACQ,UAAjB,CAA4BL,cAA5B,EAA4CE,YAA5C,CAAV;AACAK,IAAAA,gBAAgB,CAACH,OAAO,CAAC,YAAD,CAAR,CAAhB;AACH,GAHQ,CAAT;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AACQ,IAAA,cAAc,EAAEJ,cADxB;AAEQ,IAAA,YAAY,EAAEE,YAFtB;AAGQ,IAAA,oBAAoB,EAAED,oBAH9B;AAIQ,IAAA,kBAAkB,EAAEE,kBAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQQC,OAAO,CAAC,SAAD,CAAP,CAAmBK,GAAnB,CAAuBC,KAAK,IAAI;AAC5B,WAAO,oBAAC,KAAD,oBAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAFD,CARR,CADJ;AAgBH;;AAED,eAAeX,WAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient from '../payroll-pal-client'\nimport CoreContext from './Core'\n\nfunction EntriesList() {\n    const [payPeriodStart, updatePayPeriodStart] = useState('10/21/19')\n    const [payPeriodEnd, updatePayPeriodEnd] = useState('10/25/19')\n\n    let entries = PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd);\n    const [totalHours, updateTotalHours] =  useState(entries['totalHours'])\n    let coreContext = useContext(CoreContext)\n\n    useEffect( () => {\n        entries = PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd)\n        updateTotalHours(entries['totalHours'])\n    });\n\n    return(\n        <div>\n            <EntryHeading \n                    payPeriodStart={payPeriodStart} \n                    payPeriodEnd={payPeriodEnd} \n                    updatePayPeriodStart={updatePayPeriodStart} \n                    updatePayPeriodEnd={updatePayPeriodEnd}\n            />\n            {\n                entries['entries'].map(entry => {\n                    return <Entry {...entry} />\n                })\n            }\n        </div>\n    )\n    \n}\n\nexport default EntriesList;"]},"metadata":{},"sourceType":"module"}
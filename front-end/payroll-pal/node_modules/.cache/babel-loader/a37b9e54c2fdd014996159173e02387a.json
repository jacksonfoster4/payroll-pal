{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient from '../payroll-pal-client';\nimport { CoreContext } from './Core';\n\nfunction EntriesList() {\n  const coreContext = useContext(CoreContext);\n  const payPeriodStart = coreContext.payPeriodStart;\n  const payPeriodEnd = coreContext.payPeriodEnd;\n  useEffect(() => {\n    PayrollPalClient.getEntries().then(result => {\n      coreContext.setEntries(result['entries']);\n      coreContext.setFirstName(result['firstName']);\n      coreContext.setPayPeriodStart(result['payPeriodStart']);\n      coreContext.setPayPeriodEnd(result['payPeriodEnd']);\n      coreContext.setPayRate(result['payRate']);\n      coreContext.setTotalHours(result['totalHours']);\n    });\n  }, [payPeriodStart, payPeriodEnd]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(EntryHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), coreContext['entries'] ? coreContext['entries'].map((entry, index) => {\n    return React.createElement(Entry, Object.assign({}, entry, {\n      index: index,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }) : null);\n}\n\nexport default EntriesList;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js"],"names":["React","useContext","useEffect","useState","Entry","EntryHeading","PayrollPalClient","CoreContext","EntriesList","coreContext","payPeriodStart","payPeriodEnd","getEntries","then","result","setEntries","setFirstName","setPayPeriodStart","setPayPeriodEnd","setPayRate","setTotalHours","map","entry","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,SAASC,WAAT,GAAuB;AACnB,QAAMC,WAAW,GAAGR,UAAU,CAACM,WAAD,CAA9B;AAEA,QAAMG,cAAc,GAAGD,WAAW,CAACC,cAAnC;AACA,QAAMC,YAAY,GAAGF,WAAW,CAACE,YAAjC;AAGAT,EAAAA,SAAS,CAAE,MAAM;AACbI,IAAAA,gBAAgB,CAACM,UAAjB,GAA8BC,IAA9B,CACKC,MAAD,IAAY;AACRL,MAAAA,WAAW,CAACM,UAAZ,CAAuBD,MAAM,CAAC,SAAD,CAA7B;AACAL,MAAAA,WAAW,CAACO,YAAZ,CAAyBF,MAAM,CAAC,WAAD,CAA/B;AACAL,MAAAA,WAAW,CAACQ,iBAAZ,CAA8BH,MAAM,CAAC,gBAAD,CAApC;AACAL,MAAAA,WAAW,CAACS,eAAZ,CAA4BJ,MAAM,CAAC,cAAD,CAAlC;AACAL,MAAAA,WAAW,CAACU,UAAZ,CAAuBL,MAAM,CAAC,SAAD,CAA7B;AACAL,MAAAA,WAAW,CAACW,aAAZ,CAA0BN,MAAM,CAAC,YAAD,CAAhC;AACH,KARL;AAUH,GAXQ,EAWN,CAACJ,cAAD,EAAiBC,YAAjB,CAXM,CAAT;AAYA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEMF,WAAW,CAAC,SAAD,CAAX,GAAyBA,WAAW,CAAC,SAAD,CAAX,CAAuBY,GAAvB,CAA2B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpE,WAAO,oBAAC,KAAD,oBAAWD,KAAX;AAAkB,MAAA,KAAK,EAAEC,KAAzB;AAAgC,MAAA,GAAG,EAAEA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAF0B,CAAzB,GAEG,IAJT,CADJ;AASH;;AAED,eAAef,WAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient from '../payroll-pal-client'\nimport { CoreContext } from './Core'\n\nfunction EntriesList() {\n    const coreContext = useContext(CoreContext)\n\n    const payPeriodStart = coreContext.payPeriodStart\n    const payPeriodEnd = coreContext.payPeriodEnd\n    \n\n    useEffect( () => {\n        PayrollPalClient.getEntries().then(\n            (result) => {\n                coreContext.setEntries(result['entries'])\n                coreContext.setFirstName(result['firstName'])\n                coreContext.setPayPeriodStart(result['payPeriodStart'])\n                coreContext.setPayPeriodEnd(result['payPeriodEnd'])\n                coreContext.setPayRate(result['payRate'])\n                coreContext.setTotalHours(result['totalHours'])\n            }\n        )\n    }, [payPeriodStart, payPeriodEnd]);\n    return(\n        <div>\n            <EntryHeading />\n            { coreContext['entries'] ? coreContext['entries'].map((entry, index) => {\n                return <Entry {...entry} index={index} key={index} /> \n            }) : null}\n\n        </div>\n    )\n}\n\nexport default EntriesList;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EditEntry.js\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction EditEntry(props) {\n  const _useState = useState(props.entry.punches ? props.entry.punches.length : 0),\n        _useState2 = _slicedToArray(_useState, 2),\n        punchCounter = _useState2[0],\n        setPunchCounter = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newPunchCounter = _useState4[0],\n        setNewPunchCounter = _useState4[1];\n\n  const _useState5 = useState(props.entry.punches),\n        _useState6 = _slicedToArray(_useState5, 2),\n        punches = _useState6[0],\n        setPunches = _useState6[1];\n\n  const Punch = props => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"punch-type\",\n      className: \"punchType\",\n      onChange: updatePunch,\n      defaultValue: props.type,\n      id: props.punchIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"work\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Work\"), React.createElement(\"option\", {\n      value: \"meal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Meal\"), React.createElement(\"option\", {\n      value: \"bereavment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Bereavement\"), React.createElement(\"option\", {\n      value: \"holiday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Holiday\"), React.createElement(\"option\", {\n      value: \"jury_duty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Jury Duty\"), React.createElement(\"option\", {\n      value: \"personal_time_off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Personal Time Off\"), React.createElement(\"option\", {\n      value: \"sick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Sick\"), React.createElement(\"option\", {\n      value: \"unpaid_time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Unpaid Time\"), React.createElement(\"option\", {\n      value: \"vacation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Vacation\")), React.createElement(\"input\", {\n      defaultValue: props.start,\n      onChange: updatePunch,\n      id: props.punchIndex,\n      className: \"start\",\n      type: \"text\",\n      placeholder: \"Start\",\n      name: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      defaultValue: props.end,\n      onChange: updatePunch,\n      id: props.punchIndex,\n      className: \"end\",\n      type: \"text\",\n      placeholder: \"End\",\n      name: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  };\n\n  const appendPunch = () => {\n    let tmp = props.entry.punches.concat([]);\n    console.log(tmp);\n    setPunches(tmp);\n  };\n\n  const updatePunch = e => {\n    let punchIndex = e.target.id;\n\n    switch (e.target.name) {\n      case 'punch-type':\n        props.entry.punches[punchIndex][0] = e.target.value;\n        break;\n\n      case 'start':\n        props.entry.punches[punchIndex][1] = e.target.value;\n        break;\n\n      case 'end':\n        props.entry.punches[punchIndex][2] = e.target.value;\n        break;\n    }\n  };\n\n  const updateEntry = e => {\n    let entry = props.entry;\n    props.updateEntry(entry);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"edit-entry-\".concat(props.entryIndex),\n    tabIndex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalLabel\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"pt-mono display-4 modal-title\",\n    id: \"exampleModalLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Edit Entry\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\xD7\"))), React.createElement(\"div\", {\n    id: \"edit-entry-body-\".concat(props.index),\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.entry.punches ? props.entry.punches.map((punch, i) => {\n    return React.createElement(Punch, {\n      entryIndex: props.entryIndex,\n      type: punch[0],\n      start: punch[1],\n      end: punch[2],\n      punchIndex: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }) : null, React.createElement(\"div\", {\n    onClick: appendPunch,\n    className: \"btn pill btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Add punch\")), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: updateEntry,\n    type: \"button\",\n    \"data-dismiss\": \"modal\",\n    name: \"save\",\n    className: \"btn pill px-3 btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Save\")))));\n}\n\nexport default EditEntry; //","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EditEntry.js"],"names":["React","useEffect","useState","EditEntry","props","entry","punches","length","punchCounter","setPunchCounter","newPunchCounter","setNewPunchCounter","setPunches","Punch","updatePunch","type","punchIndex","start","end","appendPunch","tmp","concat","console","log","e","target","id","name","value","updateEntry","entryIndex","index","map","punch","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nfunction EditEntry(props) {\n    const [punchCounter, setPunchCounter] = useState(props.entry.punches ? props.entry.punches.length : 0);\n    const [newPunchCounter, setNewPunchCounter] = useState(0)\n    const [punches, setPunches] = useState(props.entry.punches)\n    const Punch = (props) => {\n        return (\n            <div>\n                <select name=\"punch-type\" className=\"punchType\" onChange={updatePunch} defaultValue={props.type} id={props.punchIndex}>\n                    <option value=\"work\" >Work</option>\n                    <option value=\"meal\" >Meal</option>\n                    <option value=\"bereavment\" >Bereavement</option>\n                    <option value=\"holiday\" >Holiday</option>\n                    <option value=\"jury_duty\" >Jury Duty</option>\n                    <option value=\"personal_time_off\" >Personal Time Off</option>\n                    <option value=\"sick\" >Sick</option>\n                    <option value=\"unpaid_time\" >Unpaid Time</option>\n                    <option value=\"vacation\" >Vacation</option>\n                </select>\n                <input defaultValue={props.start} onChange={updatePunch} id={props.punchIndex} className=\"start\" type=\"text\" placeholder=\"Start\"name=\"start\" />\n                <input defaultValue={props.end} onChange={updatePunch} id={props.punchIndex} className=\"end\" type=\"text\" placeholder=\"End\"name=\"end\" />\n             </div>\n        )\n    }\n\n    const appendPunch = () => {\n        let tmp = props.entry.punches.concat([])\n        console.log(tmp)\n        setPunches(tmp)\n    }\n    const updatePunch = (e) => {\n        let punchIndex = e.target.id\n        switch(e.target.name) {\n            case 'punch-type':\n                props.entry.punches[punchIndex][0] = e.target.value\n                break;\n            case 'start':\n                props.entry.punches[punchIndex][1] = e.target.value\n                break;\n            case 'end':\n                props.entry.punches[punchIndex][2] = e.target.value\n                break;\n        }\n    }\n    const updateEntry = (e) => {\n        let entry = props.entry\n        props.updateEntry(entry)\n    }\n    return(\n        <div className=\"modal fade\" id={`edit-entry-${props.entryIndex}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                    <h5 className=\"pt-mono display-4 modal-title\" id=\"exampleModalLabel\">Edit Entry</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                    </div>\n                    <div id={`edit-entry-body-${props.index}`}className=\"modal-body\">\n                        { props.entry.punches ? props.entry.punches.map((punch, i) => { return <Punch entryIndex={props.entryIndex} type={punch[0]} start={punch[1]} end={punch[2]} punchIndex={i} /> }) : null }\n                        <div onClick={appendPunch} className=\"btn pill btn-dark\">Add punch</div>\n                    </div>\n                    <div className=\"modal-footer\">\n                    <button onClick={updateEntry} type=\"button\" data-dismiss=\"modal\" name=\"save\" className=\"btn pill px-3 btn-success\">Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditEntry;\n// "]},"metadata":{},"sourceType":"module"}
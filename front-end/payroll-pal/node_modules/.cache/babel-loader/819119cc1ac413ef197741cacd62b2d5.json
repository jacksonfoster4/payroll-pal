{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient, { Heartbeat } from '../payroll-pal-client';\nimport { CoreContext } from './Core';\nimport AuthContext from '../AuthContext';\n\nfunction EntriesList() {\n  const coreContext = useContext(CoreContext);\n  const authContext = useContext(AuthContext);\n  const payPeriodStart = coreContext.payPeriodStart;\n  const payPeriodEnd = coreContext.payPeriodEnd;\n  useEffect(() => {\n    console.log('hello workdsfs');\n    coreContext.loading = true;\n    PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd).then(result => {\n      coreContext.setEntries(result['entries']);\n      coreContext.setFirstName(result['firstName']);\n      coreContext.setPayRate(result['payRate']);\n      coreContext.setTotalHours(result['totalHours']);\n      coreContext.loading = false;\n    });\n  }, [payPeriodStart, payPeriodEnd]);\n  useEffect(() => {\n    let self = this;\n    let hb = setInterval(function () {\n      Heartbeat().catch(error => {\n        clearInterval(hb);\n        self.props.context.logout();\n      });\n    }, 30000);\n    PayrollPalClient.getEntries().then(result => {\n      if (result.error) {\n        if (result.status_code === 401) {\n          coreContext.setState({\n            error401: true\n          });\n          coreContext.props.context.logout();\n        } else {\n          coreContext.setState({\n            error: true\n          });\n          coreContext.props.context.logout();\n        }\n      } else {\n        coreContext.setState({\n          loading: false,\n          entries: result['entries'],\n          firstName: result['firstName'],\n          payPeriodStart: result['payPeriodStart'],\n          payPeriodEnd: result['payPeriodEnd'],\n          payRate: result['payRate'],\n          totalHours: result['totalHours'],\n          allApproved: false\n        });\n      }\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(EntryHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), coreContext['entries'] ? coreContext['entries'].map((entry, index) => {\n    return React.createElement(Entry, Object.assign({}, entry, {\n      index: index,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }) : null);\n}\n\nexport default EntriesList;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/CoreComponents/EntriesList.js"],"names":["React","useContext","useEffect","useState","Entry","EntryHeading","PayrollPalClient","Heartbeat","CoreContext","AuthContext","EntriesList","coreContext","authContext","payPeriodStart","payPeriodEnd","console","log","loading","getEntries","then","result","setEntries","setFirstName","setPayRate","setTotalHours","self","hb","setInterval","catch","error","clearInterval","props","context","logout","status_code","setState","error401","entries","firstName","payRate","totalHours","allApproved","map","entry","index"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Entry from \"./Entry\";\nimport EntryHeading from \"./EntryHeading\";\nimport PayrollPalClient, { Heartbeat } from '../payroll-pal-client'\nimport { CoreContext } from './Core'\nimport AuthContext from '../AuthContext'\n\nfunction EntriesList() {\n    const coreContext = useContext(CoreContext)\n    const authContext = useContext(AuthContext)\n    const payPeriodStart = coreContext.payPeriodStart\n    const payPeriodEnd = coreContext.payPeriodEnd\n    \n\n    useEffect( () => {\n        console.log('hello workdsfs')\n        coreContext.loading = true\n        PayrollPalClient.getEntries(payPeriodStart, payPeriodEnd).then(\n            (result) => {\n                coreContext.setEntries(result['entries'])\n                coreContext.setFirstName(result['firstName'])\n                coreContext.setPayRate(result['payRate'])\n                coreContext.setTotalHours(result['totalHours'])\n                coreContext.loading = false\n            },\n        )\n    }, [payPeriodStart, payPeriodEnd]);\n\n    useEffect(() => {\n        let self = this\n        let hb = setInterval(function () {\n        Heartbeat().catch(\n            (error) => {\n            clearInterval(hb)\n            self.props.context.logout()\n            }\n        )\n        }, 30000)\n    PayrollPalClient.getEntries()\n    .then((result) => {\n        if(result.error){\n          if(result.status_code === 401){\n            coreContext.setState({error401: true})\n            coreContext.props.context.logout()\n          }\n          else {\n            coreContext.setState({error: true})\n            coreContext.props.context.logout()\n          }\n        }\n        else {\n          coreContext.setState({\n            loading: false,\n            entries: result['entries'],\n            firstName: result['firstName'],\n            payPeriodStart: result['payPeriodStart'],\n            payPeriodEnd: result['payPeriodEnd'],\n            payRate: result['payRate'],\n            totalHours: result['totalHours'],\n            allApproved: false,\n          })\n        }\n      })\n    }, [])\n    return(\n        <div>\n            <EntryHeading />\n            { coreContext['entries'] ? coreContext['entries'].map((entry, index) => {\n                return <Entry {...entry} index={index} key={index} /> \n            }) : null}\n\n        </div>\n    )\n}\n\nexport default EntriesList;"]},"metadata":{},"sourceType":"module"}
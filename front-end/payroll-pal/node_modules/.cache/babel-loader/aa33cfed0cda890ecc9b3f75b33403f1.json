{"ast":null,"code":"class PayrollPalClient {\n  static login(username, password) {\n    let ppc = new PayrollPalClient();\n    ppc.setIsAuthenticated(true);\n    ppc.setAuthToken(\"AUTH-TOKEN-XXXXXXX\");\n    return ppc;\n  }\n\n  setAuthToken(token) {\n    this.authToken = token;\n    setCookie({\n      'authToken': token\n    });\n  }\n\n  setIsAuthenticated(val = false) {\n    this.isAuthenticated = val;\n    setCookie({\n      'isAuthenticated': val\n    });\n  }\n\n  static setCookie(obj) {\n    let cookie = document.cookie;\n\n    for (let key in obj) {\n      cookie += \"\".concat(key, \"=\").concat(obj[key], \";\");\n    }\n\n    return document.cookie;\n  }\n\n  static getCookie(key) {\n    let cookie = document.cookie;\n    cookie = cookie.split(\";\");\n    cookie = [cookie.map(el => el.split(\"=\"))];\n    cookieAsObj = {};\n\n    for (let c in cookie) {\n      newCookie[c[0]] = c[1];\n    }\n\n    return cookieAsObj[key];\n  }\n\n  static deleteCookie(key) {\n    let cookie = document.cookie;\n    cookie = cookie.split(\";\");\n    cookie = [cookie.map(el => el.split(\"=\"))];\n    cookieAsObj = {};\n\n    for (let c in cookie) {\n      newCookie[c[0]] = c[1];\n    }\n\n    cookie = '';\n    delete cookieAsObj[key];\n    cookieAsObj.keys().map(key => {\n      cookie += \"\".concat(key, \"=\").concat(cookieAsObj[key], \"; \");\n    });\n  }\n\n  deleteAuthToken() {\n    this.authToken = undefined;\n    window.localStorage.removeItem('authToken');\n  }\n\n  deleteIsAuthenticated() {\n    this.isAuthenticated = undefined;\n    window.localStorage.removeItem('isAuthenticated');\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n  }\n\n}\n\nexport default PayrollPalClient;","map":{"version":3,"sources":["/Users/jacksonfoster/Code/projects/payroll-pal/front-end/payroll-pal/src/payroll-pal-client.js"],"names":["PayrollPalClient","login","username","password","ppc","setIsAuthenticated","setAuthToken","token","authToken","setCookie","val","isAuthenticated","obj","cookie","document","key","getCookie","split","map","el","cookieAsObj","c","newCookie","deleteCookie","keys","deleteAuthToken","undefined","window","localStorage","removeItem","deleteIsAuthenticated","logout"],"mappings":"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","sourcesContent":["class PayrollPalClient  {\n    static login(username, password){\n        let ppc = new PayrollPalClient()\n        ppc.setIsAuthenticated(true);\n        ppc.setAuthToken(\"AUTH-TOKEN-XXXXXXX\");\n        return ppc\n    }\n\n    setAuthToken(token){\n        this.authToken = token;\n        setCookie({'authToken': token})\n    }\n    setIsAuthenticated(val=false){\n        this.isAuthenticated = val;\n        setCookie({'isAuthenticated': val})\n    }\n\n    static setCookie(obj){\n        let cookie = document.cookie;\n        for(let key in obj){\n            cookie += `${key}=${obj[key]};`\n        }\n        return document.cookie\n    }\n\n    static getCookie(key){\n        let cookie = document.cookie;\n        cookie = cookie.split(\";\");\n        cookie = [cookie.map(el => el.split(\"=\"))]\n        cookieAsObj = {}\n        for (let c in cookie){\n            newCookie[c[0]] = c[1]\n        }\n        return cookieAsObj[key]\n    }\n\n    static deleteCookie(key){\n        let cookie = document.cookie;\n        cookie = cookie.split(\";\");\n        cookie = [cookie.map(el => el.split(\"=\"))]\n        cookieAsObj = {}\n        for (let c in cookie){\n            newCookie[c[0]] = c[1]\n        }\n        cookie =''\n        delete cookieAsObj[key]\n        cookieAsObj.keys().map(key => {\n            cookie += `${key}=${cookieAsObj[key]}; `\n        })\n    }\n\n    deleteAuthToken(){\n        this.authToken = undefined;\n        window.localStorage.removeItem('authToken')\n    }\n    deleteIsAuthenticated(){\n        this.isAuthenticated = undefined;\n        window.localStorage.removeItem('isAuthenticated')\n    }\n\n    logout(){\n        this.token = null\n        this.isAuthenticated = false\n    }\n}\n\nexport default PayrollPalClient;"]},"metadata":{},"sourceType":"module"}